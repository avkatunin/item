{"version":3,"sources":["logo.png","pages/search/components/search-nav/index.js","pages/search/components/search-result-table/index.js","pages/search/index.js","api/index.js","permission/roles.js","store/current-user-store.js","utils.js","store/base-store.js","store/user-store.js","store/building-store.js","store/realty-store.js","store/developers-store.js","store/search-store.js","store/realty-type-store.js","store/district-store.js","store/housing-complex-store.js","pages/realty/components/realty-table/index.js","components/form/create-antd-field.js","pages/realty/components/realty-form/index.js","pages/realty/index.js","pages/buildings/components/buildings-table/index.js","pages/buildings/components/buildings-form/index.js","pages/buildings/index.js","pages/housing-complex/components/gallery.js","components/form/photo-loader/photo-loader.js","pages/housing-complex/housing-complex.js","pages/housing-complex/housing-complex-form.js","pages/housing-complex/housing-complex-table.js","pages/housing-complex/housing-complex-container.js","pages/developers/components/developer-form/index.js","pages/developers/components/developer-table/index.js","pages/developers/index.js","pages/users/components/user-table/index.js","pages/users/components/user-invite-form/index.js","pages/users/index.js","routes/index.js","components/navbar/index.js","components/form/signin/components/login/index.js","components/form/signin/components/create-user/index.js","components/form/signin/index.js","app/index.js","index.js"],"names":["module","exports","InputGroup","Input","Group","SearchNav","props","fields","onChangeField","onReset","onSearch","isSubmiting","realtyTypes","districts","className","type","gutter","span","compact","style","width","onChange","value","priceFrom","priceTo","areaFrom","areaTo","floorFrom","floorTo","amountBedrooms","districtId","map","district","Option","key","id","name","housingComplexId","event","target","status","item","dateMoment","dateString","format","deadline","marginTop","onClick","loading","columns","title","dataIndex","render","SeaarchResultTable","data","dataSource","size","rowKey","inject","observer","searchStore","realtyTypeStore","districtStore","useEffect","isFetched","fetch","setField","bind","reset","search","isLoading","error","message","result","BASE_URL","API_URL","axiosInstance","axios","create","baseURL","headers","client","url","params","post","patch","USER_ROLES","ADMIN","label","MANAGER","USER","CurrentUserStore","user","cb","this","_fetching","then","notification","success","_fetchFailure","method","qs","stringify","_fetchSuccess","res","parse","window","location","href","Error","currentUserStore","roleId","decorate","observable","isAuth","computed","isAdmin","logIn","action","signIn","logOut","bound","BaseStore","apiUrl","initialData","messages","_apiUrl","editableItemId","find","el","String","strParams","_url","undefined","Array","isArray","push","response","addSuccess","addFailure","index","indexOf","i","updateSuccess","updateFailure","filter","removeSuccess","removeFailure","BaseStoreDecorated","isEditingItem","editItem","saveEditItem","resetEditItem","getItem","addItem","updateItem","removeItem","UserStore","email","userStore","invite","BuildingsStore","buildingsStore","RealtyStore","realtyStore","DevelopersStore","developersStore","SearchStore","_initialValues","RealtyTypeStore","DistrictStore","HousingComplexStore","itemId","photo","photos","housingComplexStore","getUploadPhotoUrl","onUploadPhoto","to","icon","RealtyTable","onUpdate","nextColumns","isViewOnly","column","marginBottom","disabled","FormItem","Form","Item","Select","CreateAntField","AntComponent","field","form","hasFeedback","selectOptions","submitCount","formItemLayout","required","touched","submitted","hasError","errors","submittedError","touchedError","help","validateStatus","onBlur","setFieldTouched","setFieldValue","locale","ruLocale","text","AntDatePicker","TimePicker","DatePicker","AntInput","AntSelect","AntInputNumber","Switch","InputNumber","AntChecbox","Checkbox","RealtyForm","useState","isSubmitting","setIsSubmitting","onSubmit","isEditable","editableItem","onCloseEditItem","initialValues","description","address","area","buildingId","ceilingHeight","moment","floor","info","price","realtyType","rented","secondary","values","a","Object","checked","resetForm","component","justify","htmlType","TabPane","Tabs","activeTab","setActiveTab","activeKey","tab","BuildingTable","scroll","x","areaRange","award","cost","decoration","developerId","floors","generalContractor","metro","numberOfApartments","numberOfParkingSpaces","parkingSpaceCost","salesDocuments","utilityBills","Gallery","images","image","height","display","justifyContent","alignItems","renderCenterLeftControls","previousSlide","renderCenterRightControls","nextSlide","maxHeight","src","alt","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","handleCancel","setState","previewVisible","handlePreview","preview","originFileObj","previewImage","previewTitle","substring","lastIndexOf","handleChange","fileList","console","log","onUpload","filesToMap","handleRemove","fileId","onRemove","files","reduce","acc","uid","transformFiles","assign","state","prevProps","prevState","uploadUrl","listType","onPreview","multiple","PlusOutlined","visible","footer","onCancel","React","Component","HousingComplex","removePhoto","photoId","Boolean","length","maxWidth","saleStart","shortDescription","featureDescription","saleDescription","main_description","outsideInfrastructureDescription","lots","buildStart","buildEnd","pricePerSquareMeter","location_description","developer","commonContacts","architect","decorationMaterialsDescription","elevator","windows","facade","oneRoomArea","oneRoomPrice","twoRoomArea","twoRoomPrice","threeRoomArea","threeRoomPrice","fourRoomArea","fourRoomPrice","fiveRoomArea","fiveRoomPrice","penthouseArea","penthousePrice","tax","support","contract","parking","mortgage","installment","special","insideInfrastructureDescription","commercialArea","weekday","weekend","salesOfficeAddress","salesOfficeParking","salesOfficeContacts","salesOfficeInformation","startPrice","uploadPhotoUrl","Title","Typography","Text","BuildingForm","developers","isEditing","isSubmited","setIsSubmited","history","useHistory","initialVal","FormComponent","level","pathname","align","from","store","setData","isFetching","setIsFetching","setIsEditing","setIsSubmiting","handleEdit","useCallback","handleChangeTab","handleUpdate","handleCreate","housingComplex","building","getData","EditForm","initialValue","onTabScroll","onEdit","viewContacts","viewTime","DeveloperTable","defaultValue","role","UserTable","setEmail","handleSubmit","e","path","exact","RealtyPage","BuildingsPage","HousingComplexPage","DevelopersPage","UsersPage","SearchPage","useLocation","marginRight","logo","position","selectedKeys","mode","theme","fullName","WrappedLoginForm","getFieldDecorator","preventDefault","validateFields","err","resetFields","rules","prefix","color","WrappedCreateUserForm","onCreated","signUp","SignInForm","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ab7bca02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a6a8e5ea.png\";","import React from 'react'\nimport {\n  Input,\n  Col,\n  Row,\n  Select,\n  InputNumber,\n  DatePicker,\n  Button,\n  Form,\n} from 'antd'\n\nimport './search-nav.css'\n\nconst InputGroup = Input.Group\n\nexport default function SearchNav(props) {\n  const {\n    fields,\n    onChangeField,\n    onReset,\n    onSearch,\n    isSubmiting,\n    realtyTypes,\n    districts,\n  } = props\n\n  return (\n    <div className=\"search-nav\">\n      <Form>\n        <Row type=\"flex\" gutter={20}>\n          <Col span={4}>\n            <label>Цена от - до</label>\n            <InputGroup compact>\n              <InputNumber\n                style={{ width: '50%' }}\n                onChange={value => onChangeField('priceFrom', value)}\n                value={fields.priceFrom}\n              />\n              <InputNumber\n                style={{ width: '50%' }}\n                onChange={value => onChangeField('priceTo', value)}\n                value={fields.priceTo}\n              />\n            </InputGroup>\n          </Col>\n          <Col span={4}>\n            <label>Площадь от - до</label>\n            <InputGroup compact>\n              <InputNumber\n                style={{ width: '50%' }}\n                onChange={value => onChangeField('areaFrom', value)}\n                value={fields.areaFrom}\n              />\n              <InputNumber\n                style={{ width: '50%' }}\n                onChange={value => onChangeField('areaTo', value)}\n                value={fields.areaTo}\n              />\n            </InputGroup>\n          </Col>\n          <Col span={4}>\n            <label>Этажность от - до</label>\n            <InputGroup compact>\n              <InputNumber\n                style={{ width: '50%' }}\n                onChange={value => onChangeField('floorFrom', value)}\n                value={fields.floorFrom}\n              />\n              <InputNumber\n                style={{ width: '50%' }}\n                onChange={value => onChangeField('floorTo', value)}\n                value={fields.floorTo}\n              />\n            </InputGroup>\n          </Col>\n          <Col span={4}>\n            <label>Спальни</label>\n            <InputNumber\n              style={{ width: '100%' }}\n              onChange={value => onChangeField('amountBedrooms', value)}\n              value={fields.amountBedrooms}\n            />\n          </Col>\n          <Col span={4}>\n            <label>Идентификатор района</label>\n            <Select\n              value={fields.districtId}\n              onChange={value => onChangeField('districtId', value)}\n            >\n              {districts &&\n                districts.map(district => (\n                  <Select.Option key={district.id} value={district.id}>\n                    {district.name}\n                  </Select.Option>\n                ))}\n            </Select>\n          </Col>\n        </Row>\n\n        <br />\n\n        <Row type=\"flex\" gutter={20}>\n          <Col span={4}>\n            <label>Комплекс</label>\n            <Input\n              value={fields.housingComplexId}\n              onChange={event =>\n                onChangeField('housingComplexId', event.target.value)\n              }\n            />\n          </Col>\n          <Col span={4}>\n            <label>Тип недвижимости</label>\n            <Select\n              value={fields.status}\n              onChange={value => onChangeField('status', value)}\n            >\n              {realtyTypes &&\n                realtyTypes.map(item => (\n                  <Select.Option value={item.id} key={item.id}>\n                    {item.name}\n                  </Select.Option>\n                ))}\n            </Select>\n          </Col>\n          <Col span={4}>\n            <label>Срок сдачи</label>\n            <DatePicker\n              style={{ width: '100%' }}\n              onChange={(dateMoment, dateString) =>\n                onChangeField('deadline', dateMoment.format())\n              }\n              value={fields.deadline}\n            />\n          </Col>\n          <Col span={4}>\n            <label>Опции</label>\n            <Input onChange={() => {}} />\n          </Col>\n          <Col span={4}>\n            <Button.Group style={{ width: '100%', marginTop: 24 }}>\n              <Button type=\"danger\" style={{ width: '50%' }} onClick={onReset}>\n                Сбросить\n              </Button>\n              <Button\n                type=\"primary\"\n                style={{ width: '50%' }}\n                onClick={onSearch}\n                loading={isSubmiting}\n              >\n                Поиск\n              </Button>\n            </Button.Group>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Table } from 'antd'\n\nconst columns = [\n  {\n    title: 'id',\n    dataIndex: 'id',\n    key: 'id',\n  },\n  {\n    title: 'id строения',\n    dataIndex: 'buildingId',\n    key: 'buildingId',\n  },\n  {\n    title: 'тип строения',\n    dataIndex: 'realtyType',\n    key: 'realtyType',\n  },\n  {\n    title: 'адрес',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  {\n    title: 'площадь',\n    dataIndex: 'area',\n    key: 'area',\n  },\n  {\n    title: 'цена',\n    dataIndex: 'price',\n    key: 'price',\n  },\n  {\n    title: 'цена за метр',\n    dataIndex: 'pricePerSquareMeter',\n    key: 'pricePerSquareMeter',\n  },\n  {\n    title: 'количество спален',\n    dataIndex: 'amountBedrooms',\n    key: 'amountBedrooms',\n  },\n  {\n    title: 'высота потолка',\n    dataIndex: 'ceilingHeight',\n    key: 'ceilingHeight',\n  },\n  {\n    title: 'этаж',\n    dataIndex: 'floor',\n    key: 'floor',\n  },\n  {\n    title: 'аренда',\n    dataIndex: 'rented',\n    key: 'rented',\n  },\n  {\n    title: 'дата сдачи',\n    dataIndex: 'deadline',\n    key: 'deadline',\n  },\n  {\n    title: 'вторичка',\n    dataIndex: 'secondary',\n    key: 'secondary',\n    render: value => (value ? '+' : '-'),\n  },\n  {\n    title: 'описание',\n    dataIndex: 'info',\n    key: 'info',\n  },\n]\n\nexport default function SeaarchResultTable(props) {\n  const { data } = props\n\n  return <Table dataSource={data} size=\"small\" columns={columns} rowKey=\"id\" />\n}\n","import React, { useEffect } from 'react'\nimport SearchNav from './components/search-nav'\nimport SearchResultTable from './components/search-result-table'\nimport { observer, inject } from 'mobx-react'\nimport { Alert } from 'antd'\n\nfunction Search(props) {\n  const { searchStore, realtyTypeStore, districtStore } = props\n\n  useEffect(() => {\n    if (!realtyTypeStore.isFetched) {\n      realtyTypeStore.fetch()\n    }\n    if (!districtStore.isFetched) {\n      districtStore.fetch()\n    }\n  }, [districtStore, realtyTypeStore])\n\n  return (\n    <>\n      <SearchNav\n        fields={searchStore.fields}\n        realtyTypes={realtyTypeStore.data}\n        districts={districtStore.data}\n        onChangeField={searchStore.setField.bind(searchStore)}\n        onReset={searchStore.reset.bind(searchStore)}\n        onSearch={searchStore.search.bind(searchStore)}\n        isSubmiting={searchStore.isLoading}\n      />\n      {searchStore.error && (\n        <Alert type=\"error\" message={searchStore.error.message} />\n      )}\n      <SearchResultTable data={searchStore.result} />\n    </>\n  )\n}\n\nexport default inject(\n  'searchStore',\n  'realtyTypeStore',\n  'districtStore'\n)(observer(Search))\n","import axios from 'axios'\n\n// export const BASE_URL = 'http://10.0.0.101:8088'\n// export const BASE_URL = 'http://localhost:8088'\nexport const BASE_URL = 'http://37.230.116.140:8088'\n// export const BASE_URL = 'http://37.230.116.140:8090'\nexport const API_URL = BASE_URL + '/api/v1'\n\n/**\n  \n  /api/{entity}/add\n  где entity принимает значения user, realty, building, developer, district\n  это POST запросы, которые в body пихают сущность\n  /api/{entity}/update\n  /api/{entity}/delete\n \n*/\n\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  // baseURL: 'http://localhost:8088/api/v1',\n  // headers: { 'X-Custom-Header': 'foobar' },\n})\n\nexport const client = {\n  get: (url, params) => axiosInstance(url, params),\n  post: (url, params) => axiosInstance.post(url, params),\n  delete: url => axiosInstance.delete(url),\n  patch: (url, params) => axiosInstance.patch(url, params),\n}\n","export const USER_ROLES = {\n  ADMIN: {\n    id: 1,\n    label: 'админ',\n  },\n  MANAGER: {\n    id: 2,\n    label: 'менеджер',\n  },\n  USER: {\n    id: 3,\n    label: 'пользователь',\n  },\n}\n","import { observable, computed, action, decorate } from 'mobx'\nimport { client, BASE_URL } from '../api'\nimport axios from 'axios'\nimport { USER_ROLES } from '../permission'\nimport qs from 'query-string'\nimport { notification } from 'antd'\nimport { getUrlError } from '../utils'\n\nclass CurrentUserStore {\n  user = null\n  // {\n  //   roleId: USER_ROLES.ADMIN.id,\n  // }\n\n  isLoading = false\n\n  error = null\n\n  get isAuth() {\n    return this.user !== null\n  }\n\n  get isAdmin() {\n    return (\n      this.user &&\n      (currentUserStore.user.roleId === USER_ROLES.ADMIN.id ||\n        currentUserStore.user.roleId === USER_ROLES.MANAGER.id)\n    )\n  }\n\n  signUp(user, cb) {\n    this._fetching()\n\n    return client\n      .post('user', user)\n      .then(() => {\n        notification.success({ message: 'Учетная запись создана' })\n        this.isLoading = false\n        if (cb) cb()\n      })\n      .catch(this._fetchFailure)\n  }\n\n  signIn(user) {\n    this._fetching()\n\n    return axios({\n      method: 'post',\n      url: BASE_URL + '/login',\n      data: qs.stringify(user),\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    })\n      .then(() => {\n        client\n          .get('user/current-user')\n          .then(this._fetchSuccess)\n          .catch(this._fetchFailure)\n      })\n      .catch(this._fetchFailure)\n  }\n\n  logOut() {\n    axios({\n      method: 'post',\n      url: BASE_URL + '/logout',\n    })\n      .then(res => {\n        this.user = null\n      })\n      .catch(this._fetchFailure)\n  }\n\n  _fetching() {\n    this.isLoading = true\n    this.error = null\n  }\n\n  _fetchSuccess(res) {\n    if (getUrlError()) {\n      this._fetchFailure(new Error('Ошибка логина'))\n    } else {\n      this.user = res.data\n      this.isLoading = false\n    }\n  }\n\n  _fetchFailure(error) {\n    this.error = error\n    this.isLoading = false\n    notification.error({ message: error.message })\n  }\n}\n\nconst CurrentUserStoreDecorated = decorate(CurrentUserStore, {\n  user: observable,\n  isAuth: computed,\n  isAdmin: computed,\n\n  logIn: action,\n  signIn: action,\n  logOut: action,\n\n  _fetching: action.bound,\n  _fetchSuccess: action.bound,\n  _fetchFailure: action.bound,\n})\n\nexport const currentUserStore = new CurrentUserStoreDecorated()\n","import qs from 'query-string'\n\nexport const getUrlError = () => {\n  const parsed = qs.parse(window.location.href)\n  return parsed.error\n}\n","import { observable, action, decorate, computed } from 'mobx'\nimport { client } from '../api'\nimport { notification } from 'antd'\nimport qs from 'query-string'\n\nclass BaseStore {\n  _apiUrl = ''\n\n  data = null\n\n  editableItemId = null\n\n  isLoading = false\n\n  isFetched = false\n\n  error = false\n\n  static messages = {\n    addSuccess: 'Объект успешно добавлен',\n    addFailure: 'Объект не добавлен',\n    updateSuccess: 'Объект успешно обновлен',\n    updateFailure: 'Объект не обновлен',\n    removeSuccess: 'Объект успешно удален',\n    removeFailure: 'Объект не удален',\n  }\n\n  constructor(apiUrl, initialData = null, messages = BaseStore.messages) {\n    this._apiUrl = apiUrl\n    this.data = initialData\n    this.messages = messages\n  }\n\n  get isEditingItem() {\n    return this.editableItemId !== null\n  }\n\n  async getItem(id) {\n    let item = null\n\n    if (this.data !== null) {\n      item = this.data.find(el => String(el.id) === String(id))\n    }\n\n    if (!item) {\n      await this.fetch(id)\n      if (!this.error) {\n        item = this.data.find(el => String(el.id) === String(id))\n      }\n    }\n\n    return item\n  }\n\n  fetch(url, params = {}) {\n    this._fetching()\n\n    const strParams = qs.stringify(params)\n\n    const _url =\n      url === undefined\n        ? this._apiUrl\n        : `${this._apiUrl}/${url}${strParams && '?'}${strParams}`\n\n    return client\n      .get(_url)\n      .then(res => {\n        if (Array.isArray(res.data)) {\n          this.data = res.data\n        } else {\n          if (this.data === null) this.data = []\n          this.data.push(res.data)\n        }\n        this._fetchSuccess()\n        this.isFetched = true\n        return res\n      })\n      .catch(this._fetchFailure)\n  }\n\n  addItem(item) {\n    this._fetching()\n\n    return client\n      .post(this._apiUrl, item)\n      .then(response => {\n        if (response.data !== null) {\n          this.data = [...(this.data || []), response.data]\n          // console.log('- - - this.data', this.data)\n          this._fetchSuccess()\n          notification.success({ message: this.messages.addSuccess })\n        } else {\n          notification.error({ message: this.messages.addFailure })\n        }\n        return response\n      })\n      .catch(this._fetchFailure)\n  }\n\n  updateItem(id, data) {\n    this._fetching()\n\n    return client\n      .patch(`${this._apiUrl}/${id || this.editableItemId}`, data)\n      .then(res => {\n        const index = this.data.indexOf(i => i.id === res.data.id)\n        this.data[index] = res.data\n\n        if (this.editableItemId) {\n          this.editableItemId = null\n        }\n\n        notification.success({ message: this.messages.updateSuccess })\n        this._fetchSuccess()\n      })\n      .catch(error => {\n        this._fetchFailure(error)\n        notification.error({ message: this.messages.updateFailure })\n      })\n  }\n\n  removeItem(id, url) {\n    this._fetching()\n\n    return client\n      .delete(`${this._apiUrl}/${id}${url ? '/' + url : ''}`)\n      .then(res => {\n        this.data = this.data.filter(i => i.id !== id)\n        this._fetchSuccess()\n        notification.success({ message: this.messages.removeSuccess })\n      })\n      .catch(error => {\n        this._fetchFailure(error)\n        notification.error({ message: this.messages.removeFailure })\n      })\n  }\n\n  editItem(id) {\n    this.editableItemId = id\n  }\n\n  resetEditItem() {\n    this.editableItemId = null\n  }\n\n  _fetching() {\n    this.isLoading = true\n    this.error = null\n  }\n\n  _fetchSuccess() {\n    this.isLoading = false\n  }\n\n  _fetchFailure(error) {\n    this.error = error\n    this.isLoading = false\n  }\n}\n\nconst BaseStoreDecorated = decorate(BaseStore, {\n  data: observable,\n  editableItemId: observable,\n  isLoading: observable,\n  isFetched: observable,\n  error: observable,\n\n  isEditingItem: computed,\n  editItem: action,\n  saveEditItem: action,\n  resetEditItem: action,\n\n  getItem: action,\n  fetch: action,\n  addItem: action,\n  updateItem: action,\n  removeItem: action,\n\n  _fetching: action.bound,\n  _fetchSuccess: action.bound,\n  _fetchFailure: action.bound,\n})\n\nexport default BaseStoreDecorated\n","import { decorate, action } from 'mobx'\nimport BaseStore from './base-store'\nimport { client } from '../api'\n\n/**\n * пользователи\n */\nclass UserStore extends BaseStore {\n  constructor() {\n    super('user')\n  }\n\n  invite(email) {\n    return client.post(`${this._apiUrl}/invite`, { email })\n  }\n}\n\nconst UserStoreDecorated = decorate(UserStore, {\n  invite: action,\n})\n\nexport const userStore = new UserStoreDecorated()\n","import { decorate } from 'mobx'\nimport BaseStore from './base-store'\n\n/**\n * объекты / строения\n */\nclass BuildingsStore extends BaseStore {\n  constructor() {\n    super('building')\n  }\n}\n\nconst BuildingsStoreDecorated = decorate(BuildingsStore, {})\n\nexport const buildingsStore = new BuildingsStoreDecorated()\n","import { decorate } from 'mobx'\nimport BaseStore from './base-store'\n\n/**\n * дома и жилищные комплексы\n * api realty\n */\nclass RealtyStore extends BaseStore {\n  constructor() {\n    super('realty')\n  }\n}\n\nconst RealtyStoreDecorated = decorate(RealtyStore, {})\n\nexport const realtyStore = new RealtyStoreDecorated()\n","import { decorate } from 'mobx'\nimport BaseStore from './base-store'\n\n/**\n * застройщики\n */\nclass DevelopersStore extends BaseStore {\n  constructor() {\n    super('developer')\n  }\n}\n\nconst DeveloperStoreDecorated = decorate(DevelopersStore, {})\n\nexport const developersStore = new DeveloperStoreDecorated()\n","import { observable, computed, action, decorate } from 'mobx'\n\nimport { client } from '../api'\nclass SearchStore {\n  _initialValues = {\n    priceFrom: null,\n    priceTo: null,\n    areaFrom: null,\n    areaTo: null,\n    amountBedrooms: null,\n    deadline: null,\n    districtId: null,\n    housingComplexId: null,\n    floorFrom: null,\n    floorTo: null,\n    status: null,\n  }\n\n  isLoading = false\n\n  fields = {\n    ...this._initialValues,\n  }\n\n  result = []\n\n  error = null\n\n  setField(key, value) {\n    this.fields = {\n      ...this.fields,\n      [key]: value,\n    }\n  }\n\n  search() {\n    this.isLoading = true\n\n    client\n      .post('search', this.fields)\n      .then(response => {\n        this.result = response.data\n        this.isLoading = false\n      })\n      .catch(error => {\n        this.error = error\n        this.isLoading = false\n      })\n  }\n\n  reset() {\n    this.error = null\n    this.result = []\n    this.fields = {\n      ...this._initialValues,\n    }\n  }\n}\n\nconst SearchStoreDecorated = decorate(SearchStore, {\n  result: observable,\n  isLoading: observable,\n  fields: observable,\n  error: observable,\n  setField: action,\n  search: action,\n  reset: action,\n})\n\nexport const searchStore = new SearchStoreDecorated()\n","import { decorate } from 'mobx'\nimport BaseStore from './base-store'\n\nclass RealtyTypeStore extends BaseStore {\n  constructor() {\n    super('realty-type')\n  }\n}\n\nconst RealtyTypeStoreDecorated = decorate(RealtyTypeStore, {})\n\nexport const realtyTypeStore = new RealtyTypeStoreDecorated()\n","import { decorate } from 'mobx'\nimport BaseStore from './base-store'\n\n/**\n * районы\n */\nclass DistrictStore extends BaseStore {\n  constructor() {\n    super('district')\n  }\n}\n\nconst DistrictStoreDecorated = decorate(DistrictStore, {})\n\nexport const districtStore = new DistrictStoreDecorated()\n","import { decorate } from 'mobx'\nimport BaseStore from './base-store'\nimport { API_URL } from '../api'\nimport { action } from 'mobx'\n\nclass HousingComplexStore extends BaseStore {\n  constructor() {\n    super('housing-complex')\n  }\n\n  getUploadPhotoUrl(itemId) {\n    const url = `${API_URL}/${this._apiUrl}/${itemId}/photos`\n    return url\n  }\n\n  onUploadPhoto(item, photo) {\n    const index = this.data.indexOf(item)\n    this.data[index].photos.push(photo)\n  }\n}\n\nconst HousingComplexDecorated = decorate(HousingComplexStore, {\n  getUploadPhotoUrl: action.bound,\n  onUploadPhoto: action.bound,\n})\n\nexport const housingComplexStore = new HousingComplexDecorated()\n","import React from 'react'\nimport { Table, Button } from 'antd'\nimport { Link } from 'react-router-dom'\nimport { realtyStore } from '../../../../store'\n\nconst columns = [\n  {\n    title: 'страница',\n    render: item => (\n      <Link key={item.id} to={`housing-complex?id=${item.id}&from=realty`}>\n        ссылка\n      </Link>\n    ),\n  },\n  {\n    title: 'id',\n    dataIndex: 'id',\n    key: 'id',\n  },\n  {\n    title: 'адрес',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  {\n    title: 'тип',\n    dataIndex: 'realtyType',\n    key: 'realtyType',\n  },\n  {\n    title: 'этаж',\n    dataIndex: 'floor',\n    key: 'floor',\n  },\n  {\n    title: 'площадь',\n    dataIndex: 'area',\n    key: 'area',\n  },\n  {\n    title: 'цена',\n    dataIndex: 'price',\n    key: 'price',\n  },\n  {\n    title: 'Цена за метр',\n    dataIndex: 'pricePerSquareMeter',\n    key: 'pricePerSquareMeter',\n  },\n  {\n    title: 'Количество спален',\n    dataIndex: 'amountBedrooms',\n    key: 'amountBedrooms',\n  },\n  {\n    title: 'Высота потолков',\n    dataIndex: 'ceilingHeight',\n    key: 'ceilingHeight',\n  },\n  {\n    title: 'Сдан',\n    dataIndex: 'rented',\n    key: 'rented',\n    render: value => (value ? '+' : '-'),\n  },\n  {\n    title: 'Вторичка',\n    dataIndex: 'secondary',\n    key: 'secondary',\n    render: value => (value ? '+' : '-'),\n  },\n  {\n    title: 'Срок сдачи',\n    dataIndex: 'deadline',\n    key: 'deadline',\n  },\n  {\n    title: 'Информация об объекте',\n    dataIndex: 'info',\n    key: 'info',\n  },\n  {\n    title: '',\n    dataIndex: null,\n    key: '_nav',\n    render: item => (\n      <Button.Group>\n        <Button\n          onClick={() => realtyStore.removeItem(item.id)}\n          type=\"primary\"\n          icon=\"delete\"\n        />\n        <Button\n          onClick={() => realtyStore.editItem(item.id)}\n          type=\"primary\"\n          icon=\"edit\"\n        />\n      </Button.Group>\n    ),\n  },\n]\n\nexport default function RealtyTable(props) {\n  const { data, isLoading, onUpdate, isViewOnly } = props\n\n  const nextColumns = isViewOnly\n    ? columns.filter(column => '_nav' !== column.key)\n    : columns\n\n  return (\n    <>\n      <nav style={{ marginBottom: 15 }}>\n        <Button type=\"primary\" onClick={onUpdate} disabled={isLoading}>\n          Обновить\n        </Button>\n      </nav>\n      <Table\n        dataSource={data}\n        columns={nextColumns}\n        size=\"small\"\n        rowKey=\"id\"\n        loading={isLoading}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport {\n  DatePicker,\n  Form,\n  Input,\n  TimePicker,\n  Select,\n  Switch,\n  InputNumber,\n  Checkbox,\n} from 'antd'\n// import { InputAutocomplete } from '../../input'\nimport ruLocale from 'antd/lib/date-picker/locale/ru_RU'\n\nimport 'moment/locale/ru'\n\nconst FormItem = Form.Item\nconst { Option } = Select\n\nconst CreateAntField = AntComponent => ({\n  field,\n  form,\n  hasFeedback,\n  label,\n  selectOptions,\n  submitCount,\n  type,\n  formItemLayout = {},\n  onChange,\n  className,\n  required,\n  ...props\n}) => {\n  const touched = form.touched[field.name]\n  const submitted = submitCount > 0\n  const hasError = form.errors[field.name]\n  const submittedError = hasError && submitted\n  const touchedError = hasError && touched\n\n  const handleInputChange = ({ target: { value } }) =>\n    form.setFieldValue(field.name, value)\n\n  const handleChange = value => {\n    form.setFieldValue(field.name, value)\n    if (onChange) onChange(value)\n  }\n  const handleBlur = () => form.setFieldTouched(field.name, true)\n\n  return (\n    <div className={className}>\n      <FormItem\n        label={label}\n        required={required}\n        hasFeedback={\n          (hasFeedback && submitted) || (hasFeedback && touched) ? true : false\n        }\n        help={submittedError || touchedError ? hasError : false}\n        validateStatus={submittedError || touchedError ? 'error' : ''}\n        {...formItemLayout}\n      >\n        <AntComponent\n          {...field}\n          {...props}\n          onBlur={handleBlur}\n          onChange={type ? handleInputChange : handleChange}\n          locale={ruLocale}\n        >\n          {selectOptions &&\n            selectOptions.map(({ text, value, id }) => (\n              <Option key={id} value={value}>\n                {text}\n              </Option>\n            ))}\n        </AntComponent>\n      </FormItem>\n    </div>\n  )\n}\n\nexport const AntTimePicker = CreateAntField(TimePicker)\nexport const AntDatePicker = CreateAntField(DatePicker)\nexport const AntInput = CreateAntField(Input)\n// export const AntInputAutocomplete = CreateAntField(InputAutocomplete)\nexport const AntSelect = CreateAntField(Select)\nexport const AntSwitch = CreateAntField(Switch)\nexport const AntInputNumber = CreateAntField(InputNumber)\nexport const AntChecbox = CreateAntField(Checkbox)\n","import React, { useState } from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport { Button, Row, Col } from 'antd'\nimport {\n  AntInput,\n  AntDatePicker,\n  AntChecbox,\n  AntInputNumber,\n} from '../../../../components/form/create-antd-field'\nimport moment from 'moment'\n\nexport default function RealtyForm(props) {\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const { onSubmit, isEditable, editableItem, onCloseEditItem } = props\n\n  const initialValues = isEditable\n    ? {\n        description: editableItem?.description || '',\n        address: editableItem?.address || '',\n        amountBedrooms: editableItem?.amountBedrooms,\n        area: editableItem?.area,\n        buildingId: editableItem?.buildingId,\n        ceilingHeight: editableItem?.ceilingHeight,\n        deadline: moment(editableItem?.deadline),\n        floor: editableItem?.floor,\n        info: editableItem?.info,\n        price: editableItem?.price,\n        realtyType: editableItem?.realtyType,\n        rented: editableItem?.rented,\n        secondary: editableItem?.secondary,\n      }\n    : {\n        description: '',\n        address: '',\n        amountBedrooms: '',\n        area: null,\n        buildingId: 1,\n        ceilingHeight: null,\n        deadline: null,\n        floor: null,\n        info: '',\n        price: null,\n        realtyType: '',\n        rented: false,\n        secondary: false,\n      }\n\n  return (\n    <Formik\n      onSubmit={async (values, form) => {\n        if (values.rented instanceof Object) {\n          values.rented = values.rented.target.checked\n        }\n        if (values.secondary instanceof Object) {\n          values.secondary = values.secondary.target.checked\n        }\n\n        setIsSubmitting(true)\n\n        if (isEditable) {\n          await onSubmit(null, values)\n        } else {\n          await onSubmit(values)\n          form.resetForm()\n        }\n\n        setIsSubmitting(false)\n      }}\n      initialValues={initialValues}\n    >\n      {() => {\n        return (\n          <Form className=\"form\">\n            <Row type=\"flex\" gutter={20}>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  label=\"описание\"\n                  name=\"description\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"address\"\n                  label=\"адрес\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  name=\"amountBedrooms\"\n                  label=\"количество спален\"\n                  component={AntInputNumber}\n                />\n              </Col>\n              <Col span={8}>\n                <Field name=\"area\" label=\"площадь\" component={AntInputNumber} />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"buildingId\"\n                  label=\"идентификатор записи здания\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  name=\"ceilingHeight\"\n                  label=\"высота потолков\"\n                  component={AntInputNumber}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  name=\"deadline\"\n                  label=\"срок сдачи\"\n                  component={AntDatePicker}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"floor\"\n                  label=\"этаж\"\n                  component={AntInput}\n                />\n              </Col>\n              {/* <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"id\"\n                label=\"идентификатор записи БД\"\n                component={AntInput}\n              />\n            </Col> */}\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"info\"\n                  label=\"информация об объекте\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"price\"\n                  label=\"цена\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"pricePerSquareMeter\"\n                  component={AntInput}\n                  label=\"цена за квадратный метр\"\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"realtyType\"\n                  label=\"тип недвижимости\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={4}>\n                <Field name=\"rented\" label=\"сдан\" component={AntChecbox} />\n              </Col>\n              <Col span={4}>\n                <Field\n                  name=\"secondary\"\n                  label=\"вторичка\"\n                  component={AntChecbox}\n                />\n              </Col>\n              {/* <Col span={8}>\n              <Field type=\"text\" name=\"\" label=\"\" component={AntInput} />\n            </Col>\n            <Col span={8}>\n              <Field type=\"text\" name=\"\" label=\"\" component={AntInput} />\n            </Col> */}\n            </Row>\n            <Row type=\"flex\" justify=\"center\" gutter={20}>\n              <Col span={8}>\n                {isEditable ? (\n                  <Row type=\"flex\" justify=\"space-between\">\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      style={{ width: '48%', marginTop: 20 }}\n                      disabled={isSubmitting}\n                    >\n                      Сохранить\n                    </Button>\n                    <Button\n                      type=\"danger\"\n                      style={{ width: '48%', marginTop: 20 }}\n                      disabled={isSubmitting}\n                      onClick={onCloseEditItem}\n                    >\n                      Отмена\n                    </Button>\n                  </Row>\n                ) : (\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    style={{ width: '100%', marginTop: 20 }}\n                    disabled={isSubmitting}\n                  >\n                    Добавить\n                  </Button>\n                )}\n              </Col>\n            </Row>\n          </Form>\n        )\n      }}\n    </Formik>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport RealtyTable from './components/realty-table'\nimport RealtyForm from './components/realty-form'\nimport { observer, inject } from 'mobx-react'\nimport { Tabs, Alert } from 'antd'\n\nconst { TabPane } = Tabs\n\nfunction RealtyPage(props) {\n  const { realtyStore, currentUserStore } = props\n\n  const [activeTab, setActiveTab] = useState('1')\n\n  useEffect(() => {\n    if (!realtyStore.isFetched) {\n      realtyStore.fetch()\n    }\n  }, [])\n\n  useEffect(() => {\n    const activeTab = realtyStore.isEditingItem ? '3' : '1'\n    setActiveTab(activeTab)\n  }, [realtyStore.isEditingItem])\n\n  return (\n    <>\n      {realtyStore.error && (\n        <Alert message={realtyStore.error.message} type=\"error\" />\n      )}\n      {currentUserStore.isAdmin ? (\n        <Tabs type=\"card\" onChange={setActiveTab} activeKey={activeTab}>\n          <TabPane tab=\"объекты\" key=\"1\" disabled={realtyStore.isEditingItem}>\n            <RealtyTable\n              data={realtyStore.data}\n              isLoading={realtyStore.isLoading}\n              onUpdate={realtyStore.fetch.bind(realtyStore)}\n            />\n          </TabPane>\n          <TabPane\n            tab=\"добавить объект\"\n            key=\"2\"\n            disabled={realtyStore.isEditingItem}\n          >\n            <RealtyForm onSubmit={realtyStore.addItem.bind(realtyStore)} />\n          </TabPane>\n          {realtyStore.isEditingItem && (\n            <TabPane tab=\"редактировать объект\" key=\"3\">\n              <RealtyForm\n                onSubmit={realtyStore.updateItem.bind(realtyStore)}\n                onCloseEditItem={realtyStore.resetEditItem.bind(realtyStore)}\n                editableItem={realtyStore.editableItem}\n                isEditable\n              />\n            </TabPane>\n          )}\n        </Tabs>\n      ) : (\n        <RealtyTable\n          isViewOnly\n          data={realtyStore.data}\n          isLoading={realtyStore.isLoading}\n          onUpdate={realtyStore.fetch.bind(realtyStore)}\n        />\n      )}\n    </>\n  )\n}\n\nexport default inject('realtyStore', 'currentUserStore')(observer(RealtyPage))\n","import React from 'react'\nimport { Table, Button } from 'antd'\nimport { Link } from 'react-router-dom'\nimport { buildingsStore } from '../../../../store'\n\nconst columns = [\n  {\n    title: 'страница',\n    render: item => (\n      <Link key={item.id} to={`housing-complex?id=${item.id}&from=buildings`}>\n        ссылка\n      </Link>\n    ),\n  },\n  {\n    title: 'id',\n    dataIndex: 'id',\n    key: 'id',\n  },\n  {\n    title: 'Адрес',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  {\n    title: 'S кв./аппарт.',\n    dataIndex: 'areaRange',\n    key: 'areaRange',\n  },\n  {\n    title: 'Вознаграждение',\n    dataIndex: 'award',\n    key: 'award',\n  },\n  {\n    title: 'Высота потолков',\n    dataIndex: 'ceilingHeight',\n    key: 'ceilingHeight',\n  },\n  {\n    title: 'Стоимость',\n    dataIndex: 'cost',\n    key: 'cost',\n  },\n  {\n    title: 'Срок сдачи',\n    dataIndex: 'deadline',\n    key: 'deadline',\n  },\n  {\n    title: 'Отделка',\n    dataIndex: 'decoration',\n    key: 'decoration',\n  },\n  {\n    title: 'Идентификатор застройщика',\n    dataIndex: 'developerId\t',\n    key: 'developerId\t',\n  },\n  {\n    title: 'Идентификатор района',\n    dataIndex: 'districtId',\n    key: 'districtId',\n  },\n  {\n    title: 'Этаж',\n    dataIndex: 'floors',\n    key: 'floors',\n  },\n  {\n    title: 'Архитектор Генподрядчик',\n    dataIndex: 'generalContractor',\n    key: 'generalContractor',\n  },\n  {\n    title: 'Идентификатор жилого комплекса',\n    dataIndex: 'housingComplexId',\n    key: 'housingComplexId',\n  },\n  {\n    title: 'Станция метро',\n    dataIndex: 'metro',\n    key: 'metro',\n  },\n  {\n    title: 'Название объекта',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: 'Кол-во кв./аппарт.',\n    dataIndex: 'numberOfApartments',\n    key: 'numberOfApartments',\n  },\n  {\n    title: 'Кол-во машиномест',\n    dataIndex: 'numberOfParkingSpaces',\n    key: 'numberOfParkingSpaces',\n  },\n  {\n    title: 'Стоимость машиноместа',\n    dataIndex: 'parkingSpaceCost',\n    key: 'parkingSpaceCost',\n  },\n  {\n    title: 'Документы продажи',\n    dataIndex: 'salesDocuments',\n    key: 'salesDocuments',\n  },\n  {\n    title: 'Статус',\n    dataIndex: 'status',\n    key: 'status',\n  },\n  {\n    title: 'Коммунальные платежи',\n    dataIndex: 'utilityBills',\n    key: 'utilityBills',\n  },\n  {\n    title: '',\n    dataIndex: null,\n    key: '_nav',\n    render: item => (\n      <Button\n        onClick={() => buildingsStore.removeItem(item.id)}\n        type=\"primary\"\n        icon=\"delete\"\n      />\n    ),\n  },\n]\n\nexport default function BuildingTable(props) {\n  const { data, isLoading, onUpdate, isViewOnly } = props\n\n  const nextColumns = isViewOnly\n    ? columns.filter(column => '_nav' !== column.key)\n    : columns\n\n  return (\n    <>\n      <nav style={{ marginBottom: 15 }}>\n        <Button type=\"primary\" onClick={onUpdate} disabled={isLoading}>\n          Обновить\n        </Button>\n      </nav>\n      <Table\n        dataSource={data}\n        columns={nextColumns}\n        size=\"small\"\n        scroll={{ x: 2700 }}\n        rowKey=\"id\"\n        loading={isLoading}\n      />\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport { Button, Row, Col } from 'antd'\nimport {\n  AntInput,\n  AntDatePicker,\n  AntInputNumber,\n} from '../../../../components/form/create-antd-field'\n\nexport default function RealtyForm(props) {\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const { onSubmit } = props\n\n  return (\n    <Formik\n      onSubmit={async (values, form) => {\n        setIsSubmitting(true)\n\n        await onSubmit(values)\n\n        form.resetForm()\n        setIsSubmitting(false)\n      }}\n      initialValues={{\n        address: '',\n        areaRange: '',\n        award: '',\n        ceilingHeight: null,\n        cost: null,\n        deadline: null,\n        decoration: '',\n        developerId: null,\n        districtId: null,\n        floors: null,\n        generalContractor: '',\n        housingComplexId: '',\n        metro: '',\n        name: '',\n        numberOfApartments: null,\n        numberOfParkingSpaces: null,\n        parkingSpaceCost: null,\n        salesDocuments: '',\n        status: '',\n        utilityBills: '',\n      }}\n    >\n      {() => (\n        <Form className=\"form\">\n          <Row type=\"flex\" gutter={20}>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"address\"\n                label=\"Адрес объекта недвижимости\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"areaRange\"\n                label=\"S кв./аппарт.\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"award\"\n                label=\"Вознаграждение\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                name=\"ceilingHeight\"\n                label=\"Высота потолков\"\n                component={AntInputNumber}\n              />\n            </Col>\n            <Col span={8}>\n              <Field name=\"cost\" label=\"Стоимость\" component={AntInputNumber} />\n            </Col>\n            <Col span={8}>\n              <Field\n                name=\"deadline\"\n                label=\"Срок сдачи\"\n                component={AntDatePicker}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"decoration\"\n                label=\"Отделка\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"developerId\"\n                label=\"Идентификатор застройщика\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"districtId\"\n                label=\"Идентификатор района\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"floors\"\n                label=\"Этаж\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"generalContractor\"\n                label=\"Архитектор Генподрядчик\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"housingComplexId\"\n                label=\"Идентификатор жилого комплекса\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"metro\"\n                label=\"Станция метро\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"name\"\n                label=\"Название объекта\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                name=\"numberOfApartments\"\n                label=\"Кол-во кв./аппарт.\"\n                component={AntInputNumber}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"numberOfParkingSpaces\"\n                label=\"Кол-во машиномест\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                name=\"parkingSpaceCost\"\n                label=\"Стоимость машиноместа\"\n                component={AntInputNumber}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"salesDocuments\"\n                label=\"Документы продажи\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"status\"\n                label=\"Статус\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"utilityBills\"\n                label=\"Коммунальные платежи\"\n                component={AntInput}\n              />\n            </Col>\n          </Row>\n          <Row type=\"flex\" justify=\"center\" gutter={20}>\n            <Col span={8}>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                style={{ width: '100%', marginTop: 20 }}\n                disabled={isSubmitting}\n              >\n                Добавить\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      )}\n    </Formik>\n  )\n}\n","import React, { useEffect } from 'react'\nimport BuildingsTable from './components/buildings-table'\nimport BuildingsForm from './components/buildings-form'\nimport { observer, inject } from 'mobx-react'\nimport { Tabs, Alert } from 'antd'\n\nconst { TabPane } = Tabs\n\nfunction BuildingsPage(props) {\n  const { buildingsStore, currentUserStore } = props\n\n  useEffect(() => {\n    if (!buildingsStore.isFetched) {\n      buildingsStore.fetch()\n    }\n  }, [])\n\n  return (\n    <>\n      {buildingsStore.error && (\n        <Alert message={buildingsStore.error.message} type=\"error\" />\n      )}\n      {currentUserStore.isAdmin ? (\n        <Tabs type=\"card\">\n          <TabPane tab=\"дома/жк\" key=\"1\">\n            <BuildingsTable\n              data={buildingsStore.data}\n              isLoading={buildingsStore.isLoading}\n              onUpdate={buildingsStore.fetch.bind(buildingsStore)}\n            />\n          </TabPane>\n          <TabPane tab=\"добавить дом/жк\" key=\"2\">\n            <BuildingsForm\n              onSubmit={buildingsStore.addItem.bind(buildingsStore)}\n            />\n          </TabPane>\n        </Tabs>\n      ) : (\n        <BuildingsTable\n          isViewOnly\n          data={buildingsStore.data}\n          isLoading={buildingsStore.isLoading}\n          onUpdate={buildingsStore.fetch.bind(buildingsStore)}\n        />\n      )}\n    </>\n  )\n}\n\nexport default inject(\n  'buildingsStore',\n  'currentUserStore'\n)(observer(BuildingsPage))\n","import React from 'react'\nimport Carousel from 'nuka-carousel'\n\nconst Gallery = ({ images }) => {\n  return (\n    <div style={{ marginBottom: 50 }}>\n      {/* <AwesomeSlider media={images.map(image => ({ source: image.url }))} />\n       */}\n      <Carousel>\n        {images.map(image => (\n          <div\n            key={image.id}\n            style={{\n              height: 400,\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n            renderCenterLeftControls={({ previousSlide }) => (\n              <button onClick={previousSlide}>Previous</button>\n            )}\n            renderCenterRightControls={({ nextSlide }) => (\n              <button onClick={nextSlide}>Next</button>\n            )}\n          >\n            <img\n              style={{\n                maxHeight: 'calc(100% - 60px)',\n                marginTop: 30,\n                marginBottom: 30,\n              }}\n              src={image.url}\n              alt=\"\"\n            />\n          </div>\n        ))}\n      </Carousel>\n    </div>\n  )\n}\n\nexport default Gallery\n","import React from 'react'\n\nimport { Upload, Modal } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = () => resolve(reader.result)\n    reader.onerror = error => reject(error)\n  })\n}\n\nexport default class PicturesWall extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      previewVisible: false,\n      previewImage: '',\n      previewTitle: '',\n      fileList: this.filesToMap(this.transformFiles(props.photos)),\n    }\n  }\n\n  handleCancel = () => this.setState({ previewVisible: false })\n\n  handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj)\n    }\n\n    this.setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true,\n      previewTitle:\n        file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\n    })\n  }\n\n  handleChange = ({ fileList, file }) => {\n    if (file.status === 'done') {\n      console.log('ph id', file.response.id)\n      this.props.onUpload(file.response)\n    }\n    this.setState({ fileList: this.filesToMap(fileList) })\n  }\n\n  handleRemove = file => {\n    const fileId = file.response ? file.response.id : file.id\n    const uploaded = this.props.photos.find(photo => photo.id === fileId)\n    if (uploaded) this.props.onRemove(fileId)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { fileList } = this.state\n    const { photos } = this.props\n\n    if (prevProps.photos !== this.props.photos) {\n      this.setState({\n        fileList: {\n          ...fileList,\n          ...this.filesToMap(this.transformFiles(photos)),\n        },\n      })\n    }\n  }\n\n  filesToMap = files => {\n    return files.reduce((acc, item) => {\n      acc[item.uid] = item\n      return acc\n    }, {})\n  }\n\n  transformFiles = files => {\n    return files.map((item, index) =>\n      Object.assign(item, { uid: '-' + String(index + 1) })\n    )\n  }\n\n  render() {\n    const { previewVisible, previewImage, previewTitle, fileList } = this.state\n    const { uploadUrl } = this.props\n\n    return (\n      <div className=\"clearfix\">\n        <Upload\n          action={uploadUrl}\n          listType=\"picture-card\"\n          fileList={Object.values(fileList)}\n          onPreview={this.handlePreview}\n          onChange={this.handleChange}\n          onRemove={this.handleRemove}\n          multiple\n        >\n          <div>\n            <PlusOutlined />\n            <div className=\"ant-upload-text\">Upload</div>\n          </div>\n        </Upload>\n        <Modal\n          visible={previewVisible}\n          title={previewTitle}\n          footer={null}\n          onCancel={this.handleCancel}\n        >\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n        </Modal>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Gallery from './components/gallery'\nimport { Row, Col, Tabs } from 'antd'\nimport PhotoLoader from '../../components/form/photo-loader'\n\nconst { TabPane } = Tabs\n\nexport default function HousingComplex(props) {\n  const removePhoto = async photoId => {\n    await props.onRemove(data.id + '/photos/' + photoId)\n  }\n\n  const { data, onUploadPhoto } = props\n\n  if (data === null) return null\n\n  return (\n    <div>\n      <Tabs type=\"card\">\n        <TabPane key=\"main\" tab=\"Описание карточки\">\n          <Row type=\"flex\" justify=\"center\">\n            {data.photos && Boolean(data.photos.length) && (\n              <Col span={20} style={{ maxWidth: 860 }}>\n                <Gallery images={data.photos} />\n              </Col>\n            )}\n          </Row>\n          <Row>\n            <Col span={16}>{data.name}</Col>\n            <Col span={8}>{data.saleStart}</Col>\n          </Row>\n          <Row>\n            <Col span={8}>{data.shortDescription}</Col>\n            <Col span={8}>{data.featureDescription}</Col>\n            <Col span={8}>{data.saleDescription}</Col>\n          </Row>\n          <Row>\n            <Col span={12}>\n              <Row>\n                <Col span={24}>{data.main_description}</Col>\n                <Col span={24}>{data.outsideInfrastructureDescription}</Col>\n              </Row>\n            </Col>\n            <Col span={12}>\n              <Row>\n                <Col span={12}>вид объекта</Col>\n                <Col span={12}>{data.realtyType}</Col>\n                <Col span={12}>лотов</Col>\n                <Col span={12}>{data.lots}</Col>\n                <Col span={12}>этажность</Col>\n                <Col span={12}>{data.floors}</Col>\n                <Col span={12}>начало</Col>\n                <Col span={12}>{data.buildStart}</Col>\n                <Col span={12}>сдача</Col>\n                <Col span={12}>{data.buildEnd}</Col>\n                <Col span={12}>цена</Col>\n                <Col span={12}>{data.pricePerSquareMeter}</Col>\n                <Col span={12}>площадь</Col>\n                <Col span={12}>{data.area}</Col>\n                <Col span={12}>район</Col>\n                <Col span={12}>\n                  {data.district?.name}. {data.district?.description}\n                </Col>\n                <Col span={12}>адрес</Col>\n                <Col span={12}>{data.address}</Col>\n                <Col span={12}>метро</Col>\n                <Col span={12}>{data.metro}</Col>\n              </Row>\n            </Col>\n            <Col span={24}>{data.location_description}</Col>\n          </Row>\n          <Row>\n            <Col span={12}>\n              <Row>\n                <Col span={8}>{data.developer?.name}</Col>\n                <Col span={8}>{data.developer?.commonContacts}</Col>\n                {/* TODO добавить поле на беке */}\n                <Col span={8}>{/* {data.deloper.createData} */}</Col>\n                <Col span={24}>{data.developer?.info}</Col>\n                {/* TODO добавить поле на беке */}\n                <Col span={24}>{/* {data.developer.projects} */}</Col>\n              </Row>\n            </Col>\n            <Col span={12}>\n              <Row>\n                <Col span={12}>архитекторы</Col>\n                <Col span={12}>{data.architect}</Col>\n                <Col span={24}>{data.decorationMaterialsDescription}</Col>\n              </Row>\n            </Col>\n            <Col span={12}>\n              <Row>\n                <Col span={8}>лифты</Col>\n                <Col span={16}>{data.elevator}</Col>\n                <Col span={8}>окна</Col>\n                <Col span={16}>{data.windows}</Col>\n              </Row>\n            </Col>\n            <Col span={12}>\n              <Row>\n                <Col span={8}>фасад</Col>\n                <Col span={16}>{data.facade}</Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={12}>\n              <Row>\n                <Col span={24}>площади и цены</Col>\n                <Col span={10}>однокомнатные</Col>\n                <Col span={6}>{data.oneRoomArea}</Col>\n                <Col span={8}>{data.oneRoomPrice}</Col>\n                <Col span={10}>двухкомнатные</Col>\n                <Col span={6}>{data.twoRoomArea}</Col>\n                <Col span={8}>{data.twoRoomPrice}</Col>\n                <Col span={10}>трехконатные</Col>\n                <Col span={6}>{data.threeRoomArea}</Col>\n                <Col span={8}>{data.threeRoomPrice}</Col>\n                <Col span={10}>четырехкомнытные</Col>\n                <Col span={6}>{data.fourRoomArea}</Col>\n                <Col span={8}>{data.fourRoomPrice}</Col>\n                <Col span={10}>пятикомнатные</Col>\n                <Col span={6}>{data.fiveRoomArea}</Col>\n                <Col span={8}>{data.fiveRoomPrice}</Col>\n                <Col span={10}>пентхаус</Col>\n                <Col span={6}>{data.penthouseArea}</Col>\n                <Col span={8}>{data.penthousePrice}</Col>\n              </Row>\n            </Col>\n            <Col span={12}>\n              <Row>\n                <Col span={12}>налог</Col>\n                <Col span={12}>{data.tax}</Col>\n                <Col span={12}>содержание</Col>\n                <Col span={12}>{data.support}</Col>\n                <Col span={12}>договор</Col>\n                <Col span={12}>{data.contract}</Col>\n                <Col span={12}>потолки</Col>\n                <Col span={12}>{data.ceilingHeight}</Col>\n                <Col span={12}>паркинг</Col>\n                <Col span={12}>{data.parking}</Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={8}>ипотека</Col>\n            <Col span={8}>рассрочка</Col>\n            <Col span={8}>акции</Col>\n            <Col span={8}>{data.mortgage}</Col>\n            <Col span={8}>{data.installment}</Col>\n            <Col span={8}>{data.special}</Col>\n            <Col span={16}>{data.insideInfrastructureDescription}</Col>\n            <Col span={8}>\n              <Row>\n                <Col span={24}>коммерческие площади и ритейл</Col>\n                <Col span={24}>{data.commercialArea}</Col>\n              </Row>\n            </Col>\n          </Row>\n          {/* TODO предложить сделать акардион */}\n          <Row>\n            <Col span={24}>закрытые для клиента данные</Col>\n            <Col span={12}>\n              <Row>\n                <Col span={10}>будни</Col>\n                <Col span={14}>{data.weekday}</Col>\n                <Col span={10}>выходные</Col>\n                <Col span={14}>{data.weekend}</Col>\n                <Col span={10}>адрес</Col>\n                <Col span={14}>{data.salesOfficeAddress}</Col>\n                <Col span={10}>парковка</Col>\n                <Col span={14}>{data.salesOfficeParking}</Col>\n                <Col span={10}>контакт</Col>\n                <Col span={14}>{data.salesOfficeContacts}</Col>\n              </Row>\n            </Col>\n            <Col span={12}>{data.salesOfficeInformation}</Col>\n            <Col span={6}>цена на старте</Col>\n            <Col span={6}>{data.startPrice}</Col>\n            <Col span={6}>вознаграждение</Col>\n            <Col span={6}>{data.award}</Col>\n          </Row>\n        </TabPane>\n        <TabPane key=\"photo\" tab=\"Фотографии\">\n          <PhotoLoader\n            uploadUrl={props.uploadPhotoUrl}\n            photos={data.photos}\n            onRemove={removePhoto}\n            onUpload={photo => onUploadPhoto(data, photo)}\n          />\n        </TabPane>\n      </Tabs>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Typography, Row, Col, Button, Tabs } from 'antd'\nimport { Formik, Form, Field } from 'formik'\nimport {\n  AntInput,\n  AntDatePicker,\n  AntChecbox,\n  AntInputNumber,\n  AntSelect,\n} from '../../components/form/create-antd-field'\nimport PhotoLoader from '../../components/form/photo-loader'\nimport { useHistory } from 'react-router-dom'\n\nconst { Title, Text } = Typography\nconst { TabPane } = Tabs\n\nfunction BuildingForm(props) {\n  const {\n    onSubmit,\n    initialValues,\n    title,\n    isSubmiting,\n    isEditable,\n    realtyTypes,\n    developers,\n    districts,\n    isEditing = false,\n  } = props\n\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [isSubmited, setIsSubmited] = useState(isEditing)\n  const history = useHistory()\n\n  const initialVal = initialValues || {\n    name: '',\n    saleStart: null, // date\n    shortDescription: '',\n    featureDescription: '',\n    saleDescription: '',\n    main_description: '',\n    outsideInfrastructureDescription: '',\n\n    realtyType: '',\n\n    lots: '',\n    floors: '',\n    buildStart: null, // date\n    buildEnd: null, // date\n    pricePerSquareMeter: '',\n    area: '',\n\n    districtId: '',\n\n    address: '',\n    metro: '',\n    location_description: '',\n\n    developerId: '',\n\n    architect: '',\n    decorationMaterialsDescription: '',\n    elevator: '',\n    windows: '',\n    facade: '',\n    oneRoomArea: '',\n    oneRoomPrice: '',\n    twoRoomArea: '',\n    twoRoomPrice: '',\n    threeRoomArea: '',\n    threeRoomPrice: '',\n    fourRoomArea: '',\n    fourRoomPrice: '',\n    fiveRoomArea: '',\n    fiveRoomPrice: '',\n    penthouseArea: '',\n    penthousePrice: '',\n    tax: '',\n    support: '',\n    contract: '',\n    ceilingHeight: '',\n    parking: '',\n    mortgage: '',\n    installment: '',\n    special: '',\n    insideInfrastructureDescription: '',\n    commercialArea: '',\n    weekday: '',\n    weekend: '',\n    salesOfficeAddress: '',\n    salesOfficeParking: '',\n    salesOfficeContacts: '',\n    salesOfficeInformation: '',\n    startPrice: '',\n    award: '',\n  }\n\n  const FormComponent = (\n    <>\n      {!isSubmited && (\n        <Title level={4}>\n          добавление фотографий доступно после создания карточки жк\n        </Title>\n      )}\n      <Formik\n        onSubmit={async (values, form) => {\n          setIsSubmitting(true)\n          const response = await onSubmit(values)\n          if (!isEditable) {\n            form.resetForm()\n          }\n          history.push(\n            history.location.pathname +\n              '?id=' +\n              response.data.id +\n              '&from=main-table'\n          )\n          setIsSubmitting(false)\n          setIsSubmited(true)\n        }}\n        initialValues={initialVal}\n      >\n        {() => {\n          return (\n            <Form className=\"form\">\n              <Row type=\"flex\" gutter={20}>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"наименование\"\n                    name=\"name\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    label=\"дата старта продаж\"\n                    name=\"saleStart\"\n                    component={AntDatePicker}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"краткая информация о ЖК\"\n                    name=\"shortDescription\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"особенная информация о ЖК\"\n                    name=\"featureDescription\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"информация по продажам в ЖК\"\n                    name=\"saleDescription\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"основная информация о ЖК\"\n                    name=\"main_description\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"информация о внешней инфраструктуры ЖК\"\n                    name=\"outsideInfrastructureDescription\"\n                    component={AntInput}\n                  />\n                </Col>\n\n                <Col span={8}>\n                  <Field\n                    name=\"realtyType\"\n                    label=\"вид объекта\"\n                    component={AntSelect}\n                    selectOptions={\n                      realtyTypes &&\n                      realtyTypes.map(type => ({\n                        text: type.name,\n                        value: type.id,\n                        id: type.id,\n                      }))\n                    }\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"лотов\"\n                    name=\"lots\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"этажность\"\n                    name=\"floors\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    label=\"начало стройки\"\n                    name=\"buildStart\"\n                    component={AntDatePicker}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    label=\"сдача\"\n                    name=\"buildEnd\"\n                    component={AntDatePicker}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"цена за метр\"\n                    name=\"pricePerSquareMeter\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"площадь\"\n                    name=\"area\"\n                    component={AntInput}\n                  />\n                </Col>\n\n                <Col span={8}>\n                  <Field\n                    name=\"districtId\"\n                    label=\"район\"\n                    component={AntSelect}\n                    selectOptions={\n                      districts &&\n                      districts.map(district => ({\n                        text: district.name,\n                        value: district.id,\n                        id: district.id,\n                      }))\n                    }\n                  />\n                </Col>\n\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"адрес\"\n                    name=\"address\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"метро\"\n                    name=\"metro\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"информация о расположении ЖК\"\n                    name=\"location_description\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    name=\"developerId\"\n                    label=\"Застройщик\"\n                    component={AntSelect}\n                    selectOptions={\n                      developers &&\n                      developers.map(developer => ({\n                        text: developer.name,\n                        value: developer.id,\n                        id: developer.id,\n                      }))\n                    }\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"архитекторы\"\n                    name=\"architect\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"информация о материалах отделки\"\n                    name=\"decorationMaterialsDescription\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"лифты\"\n                    name=\"elevator\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"окна\"\n                    name=\"windows\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"фасад\"\n                    name=\"facade\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"однокомнатные площадь\"\n                    name=\"oneRoomArea\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"однокомнатные цена\"\n                    name=\"oneRoomPrice\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"двухкомнатные площадь\"\n                    name=\"twoRoomArea\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"двухкомнатные цена\"\n                    name=\"twoRoomPrice\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"трехконатные площадь\"\n                    name=\"threeRoomArea\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"трехконатные цена\"\n                    name=\"threeRoomPrice\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"четырехкомнытные площадь\"\n                    name=\"fourRoomArea\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"четырехкомнытные цена\"\n                    name=\"fourRoomPrice\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"пятикомнатные площадь\"\n                    name=\"fiveRoomArea\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"пятикомнатные цена\"\n                    name=\"fiveRoomPrice\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"пентхаус площадь\"\n                    name=\"penthouseArea\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"пентхаус цена\"\n                    name=\"penthousePrice\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"налог\"\n                    name=\"tax\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"содержание\"\n                    name=\"support\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"договор\"\n                    name=\"contract\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"высота потолков\"\n                    name=\"ceilingHeight\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"паркинг\"\n                    name=\"parking\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"ипотека\"\n                    name=\"mortgage\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"рассрочка\"\n                    name=\"installment\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"акции\"\n                    name=\"special\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"информация о внутренней инфраструктуры ЖК\"\n                    name=\"insideInfrastructureDescription\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"коммерческие площади и ритейл\"\n                    name=\"commercialArea\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"будни\"\n                    name=\"weekday\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"выходные\"\n                    name=\"weekend\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"адрес\"\n                    name=\"salesOfficeAddress\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"Парковка\"\n                    name=\"salesOfficeParking\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"контакт\"\n                    name=\"salesOfficeContacts\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"информация для офиса продаж\"\n                    name=\"salesOfficeInformation\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"цена на старте\"\n                    name=\"startPrice\"\n                    component={AntInput}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Field\n                    type=\"text\"\n                    label=\"вознаграждение\"\n                    name=\"award\"\n                    component={AntInput}\n                  />\n                </Col>\n              </Row>\n              <Row type=\"flex\" justify=\"center\" gutter={20}>\n                <Col span={8}>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    disabled={isSubmiting}\n                    style={{ width: '100%', marginBottom: 50 }}\n                  >\n                    Добавить\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          )\n        }}\n      </Formik>\n    </>\n  )\n\n  if (!isSubmited) {\n    return FormComponent\n  }\n\n  return (\n    <Tabs type=\"card\">\n      <TabPane tab=\"основное\" key=\"main\">\n        <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\n          <Col span={24}>\n            <Title level={3}>{title}</Title>\n          </Col>\n          <Col span={24}>{FormComponent}</Col>\n        </Row>\n      </TabPane>\n      <TabPane tab=\"фотографии\" key=\"photo\">\n        <PhotoLoader uploadUrl={props.uploadPhotoUrl} />\n      </TabPane>\n    </Tabs>\n  )\n}\n\nexport default BuildingForm\n","import React from 'react'\nimport { Table, Button } from 'antd'\nimport { Link } from 'react-router-dom'\n\nconst columns = [\n  {\n    title: 'страница',\n    render: item => {\n      return (\n        <Link\n          key={item.id}\n          to={`housing-complex?id=${item.id}&from=main-table`}\n        >\n          ссылка\n        </Link>\n      )\n    },\n  },\n  {\n    title: 'Наименование',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: 'Адрес',\n    dataIndex: 'adress',\n    key: 'adress',\n  },\n]\n\nexport default function HousingComplex(props) {\n  const { data, isLoading, onUpdate } = props\n\n  return (\n    <>\n      <nav style={{ marginBottom: 15 }}>\n        <Button type=\"primary\" onClick={onUpdate} disabled={isLoading}>\n          Обновить\n        </Button>\n      </nav>\n      <Table\n        dataSource={data}\n        columns={columns}\n        size=\"small\"\n        rowKey=\"id\"\n        loading={isLoading}\n      />\n    </>\n  )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { Tabs } from 'antd'\nimport { observer, inject } from 'mobx-react'\nimport HousingComplex from './housing-complex'\nimport HousingComplexForm from './housing-complex-form'\nimport HousingComplexTable from './housing-complex-table'\nimport qs from 'query-string'\nimport _ from 'lodash'\n\nconst { TabPane } = Tabs\n\nfunction HousingComplexContainer(props) {\n  const {\n    buildingsStore,\n    realtyStore,\n    housingComplexStore,\n    location: { search },\n    realtyTypeStore,\n    districtStore,\n    developersStore,\n  } = props\n  const { id, from } = qs.parse(search)\n\n  let store = housingComplexStore\n  if (from === 'realty') store = realtyStore\n  if (from === 'buildings') store = buildingsStore\n\n  const [data, setData] = useState(null)\n  const [isFetching, setIsFetching] = useState(false)\n  const [isEditing, setIsEditing] = useState(false)\n  const [activeTab, setActiveTab] = useState(\n    id === undefined ? 'table' : 'card'\n  )\n  const [isSubmiting, setIsSubmiting] = useState(false)\n\n  const handleEdit = useCallback(() => {\n    setIsEditing(true)\n    setActiveTab('form')\n  }, [])\n  const handleChangeTab = useCallback(key => setActiveTab(key), [])\n\n  const handleUpdate = useCallback(\n    async data => {\n      setIsSubmiting(true)\n      await store.updateItem(id, data)\n      setIsEditing(false)\n      setActiveTab('card')\n      setIsSubmiting(false)\n    },\n    [store, id]\n  )\n  const handleCreate = useCallback(\n    async data => {\n      setIsSubmiting(true)\n      const response = await store.addItem(data)\n      setIsSubmiting(false)\n      return response\n    },\n    [store]\n  )\n\n  useEffect(() => {\n    async function getData() {\n      setIsFetching(true)\n\n      if (id) {\n        const data = await store.getItem(id)\n        if (from === 'buildings') setData(data.housingComplex)\n        if (from === 'realty') setData(data.building.housingComplex)\n        if (from === 'main-table') setData(data)\n\n        console.log('- - - data', data)\n        setActiveTab('card')\n      } else {\n        setActiveTab('table')\n        setData(null)\n      }\n\n      if (!housingComplexStore.isFetched) {\n        housingComplexStore.fetch()\n      }\n\n      setIsFetching(false)\n    }\n\n    getData()\n  }, [store, id, housingComplexStore, from])\n\n  useEffect(() => {\n    if (!realtyTypeStore.isFetched) {\n      realtyTypeStore.fetch()\n    }\n    if (!districtStore.isFetched) {\n      districtStore.fetch()\n    }\n    if (!developersStore.isFetched) {\n      developersStore.fetch()\n    }\n  }, [developersStore, districtStore, realtyTypeStore])\n\n  if (isFetching) {\n    return <>Загрузка...</>\n  }\n\n  const title = isEditing ? 'Редактировать карточку ЖК' : 'Добавить карточку ЖК'\n\n  const EditForm = (\n    <HousingComplexForm\n      isSubmiting={isSubmiting}\n      isEditable={isEditing}\n      onSubmit={isEditing ? handleUpdate : handleCreate}\n      initialValue={null}\n      title={title}\n      realtyTypes={realtyTypeStore.data}\n      developers={developersStore.data}\n      districts={districtStore.data}\n      uploadPhotoUrl={data && housingComplexStore.getUploadPhotoUrl(data.id)}\n    />\n  )\n\n  return (\n    <Tabs\n      type=\"card\"\n      activeKey={activeTab}\n      onChange={handleChangeTab}\n      onTabScroll=\"bottom\"\n    >\n      <TabPane\n        tab=\"Все карточки ЖК\"\n        key=\"table\"\n        disabled={housingComplexStore.isEditingItem}\n      >\n        <HousingComplexTable\n          data={housingComplexStore.data}\n          isLoading={housingComplexStore.isLoading}\n          onUpdate={housingComplexStore.fetch.bind(housingComplexStore)}\n        />\n      </TabPane>\n      {data && (\n        <TabPane tab=\"Карточка ЖК\" key=\"card\" disabled={isEditing}>\n          <HousingComplex\n            data={data}\n            onEdit={handleEdit}\n            onRemove={housingComplexStore.removeItem.bind(housingComplexStore)}\n            uploadPhotoUrl={\n              data ? housingComplexStore.getUploadPhotoUrl(data.id) : null\n            }\n            onUploadPhoto={housingComplexStore.onUploadPhoto.bind(\n              housingComplexStore\n            )}\n          />\n        </TabPane>\n      )}\n      <TabPane tab={title} key=\"form\">\n        {EditForm}\n      </TabPane>\n    </Tabs>\n  )\n}\n\nexport default inject(\n  'buildingsStore',\n  'realtyStore',\n  'housingComplexStore',\n  'realtyTypeStore',\n  'districtStore',\n  'developersStore'\n)(observer(HousingComplexContainer))\n","import React, { useState } from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport { Button, Row, Col } from 'antd'\nimport { AntInput } from '../../../../components/form/create-antd-field'\n\nexport default function RealtyForm(props) {\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const { onSubmit } = props\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          info: '',\n          commonContacts: '',\n          viewContacts: '',\n          viewTime: '',\n        }}\n        onSubmit={async (values, form) => {\n          setIsSubmitting(true)\n\n          await onSubmit(values)\n\n          form.resetForm()\n          setIsSubmitting(false)\n        }}\n      >\n        {() => (\n          <Form className=\"form\">\n            <Row type=\"flex\" gutter={20}>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"name\"\n                  label=\"Название\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"info\"\n                  label=\"Информация о застройщике\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"commonContacts\"\n                  label=\"Контакты застройщика (общедоступный)\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"viewContacts\"\n                  label=\"Контакты застройщика для просмотра\"\n                  component={AntInput}\n                />\n              </Col>\n            </Row>\n            <Row type=\"flex\" justify=\"center\">\n              <Col span={8}>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  style={{ width: '100%', marginTop: 20 }}\n                  disabled={isSubmitting}\n                >\n                  Добавить\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        )}\n      </Formik>\n    </>\n  )\n}\n","import React from 'react'\nimport { Table, Button } from 'antd'\nimport { developersStore } from '../../../../store'\n\nconst columns = [\n  {\n    title: 'id',\n    dataIndex: 'id',\n    key: 'id',\n  },\n  {\n    title: 'Контакты застройщика',\n    dataIndex: 'commonContacts',\n    key: 'commonContacts',\n  },\n  {\n    title: 'Информация о застройщике',\n    dataIndex: 'info',\n    key: 'info',\n  },\n  {\n    title: 'Название',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: 'Контакты застройщика для просмотра',\n    dataIndex: 'viewContacts',\n    key: 'viewContacts',\n  },\n  {\n    title: 'Время просмотра',\n    dataIndex: 'viewTime',\n    key: 'viewTime',\n  },\n  {\n    title: '',\n    dataIndex: null,\n    key: '_nav',\n    render: item => (\n      <Button\n        onClick={() => developersStore.removeItem(item.id)}\n        type=\"primary\"\n        icon=\"delete\"\n      />\n    ),\n  },\n]\n\nexport default function DeveloperTable(props) {\n  const { data, isLoading, onUpdate, isViewOnly } = props\n\n  const nextColumns = isViewOnly\n    ? columns.filter(column => '_nav' !== column.key)\n    : columns\n\n  return (\n    <>\n      <nav style={{ marginBottom: 15 }}>\n        <Button type=\"primary\" onClick={onUpdate} disabled={isLoading}>\n          Обновить\n        </Button>\n      </nav>\n      <Table\n        dataSource={data}\n        columns={nextColumns}\n        size=\"small\"\n        rowKey=\"id\"\n        loading={isLoading}\n      />\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport DeveloperForm from './components/developer-form'\nimport DeveloperTable from './components/developer-table'\nimport { observer, inject } from 'mobx-react'\nimport { Tabs, Alert } from 'antd'\n\nconst { TabPane } = Tabs\n\nfunction DevelopersPage(props) {\n  const { developersStore, currentUserStore } = props\n\n  useEffect(() => {\n    if (!developersStore.isFetched) {\n      developersStore.fetch()\n    }\n  }, [])\n\n  return (\n    <>\n      {developersStore.error && (\n        <Alert message={developersStore.error.message} type=\"error\" />\n      )}\n      {currentUserStore.isAdmin ? (\n        <Tabs type=\"card\">\n          <TabPane tab=\"объекты\" key=\"1\">\n            <DeveloperTable\n              data={developersStore.data}\n              isLoading={developersStore.isLoading}\n              onUpdate={developersStore.fetch.bind(developersStore)}\n            />\n          </TabPane>\n          <TabPane tab=\"добавить объект\" key=\"2\">\n            <DeveloperForm\n              error={developersStore.error}\n              onSubmit={developersStore.addItem.bind(developersStore)}\n            />\n          </TabPane>\n        </Tabs>\n      ) : (\n        <DeveloperTable\n          isViewOnly\n          data={developersStore.data}\n          isLoading={developersStore.isLoading}\n          onUpdate={developersStore.fetch.bind(developersStore)}\n        />\n      )}\n    </>\n  )\n}\n\nexport default inject(\n  'developersStore',\n  'currentUserStore'\n)(observer(DevelopersPage))\n","import React from 'react'\nimport { Table, Button, Select } from 'antd'\nimport { userStore, currentUserStore } from '../../../../store'\nimport { USER_ROLES } from '../../../../permission'\n\nconst { Option } = Select\n\nconst columns = [\n  {\n    title: 'id',\n    dataIndex: 'id',\n    key: 'id',\n  },\n  {\n    title: 'id роли',\n    dataIndex: 'roleId',\n    key: 'roleId',\n    render: (roleId, item) => {\n      if (!currentUserStore.isAdmin) {\n        return item.roleId\n      }\n\n      return (\n        <Select\n          defaultValue={roleId}\n          onChange={async roleId => {\n            await userStore.updateItem(item.id, { roleId })\n          }}\n        >\n          {Object.values(USER_ROLES).map(role => (\n            <Option value={role.id} key={role.id}>\n              {role.label}\n            </Option>\n          ))}\n        </Select>\n      )\n    },\n  },\n  {\n    title: 'компания',\n    dataIndex: 'company',\n    key: 'company',\n  },\n  {\n    title: 'телефон',\n    dataIndex: 'phoneNumber',\n    key: 'phoneNumber',\n  },\n  {\n    title: 'email',\n    dataIndex: 'email',\n    key: 'email',\n  },\n  {\n    title: 'город',\n    dataIndex: 'city',\n    key: 'city',\n  },\n]\n\nfunction UserTable(props) {\n  const { data, isLoading, onUpdate } = props\n\n  return (\n    <>\n      <nav style={{ marginBottom: 15 }}>\n        <Button type=\"primary\" onClick={onUpdate} disabled={isLoading}>\n          Обновить\n        </Button>\n      </nav>\n      <Table\n        dataSource={data}\n        columns={columns}\n        size=\"small\"\n        rowKey=\"id\"\n        loading={isLoading}\n      />\n    </>\n  )\n}\n\nexport default UserTable\n","import React, { useState, useEffect } from 'react'\nimport { Input, Button } from 'antd'\nimport { observer, inject } from 'mobx-react'\n\nimport './user-invite.css'\n\nfunction UserInviteForm(props) {\n  const { userStore } = props\n  const [email, setEmail] = useState('')\n  const [isSubmiting, setIsSubmiting] = useState(false)\n\n  const handleSubmit = async () => {\n    setIsSubmiting(true)\n    try {\n      await userStore.invite(email)\n    } catch (e) {}\n    setIsSubmiting(false)\n    setEmail('')\n  }\n\n  return (\n    <div className=\"user-invite\">\n      <div className=\"user-invite-input\">\n        <Input type=\"email\" onChange={e => setEmail(e.target.value)} />\n      </div>\n      <Button type=\"primary\" onClick={handleSubmit} disabled={isSubmiting}>\n        пригласить пользователя\n      </Button>\n    </div>\n  )\n}\n\nexport default inject('userStore')(observer(UserInviteForm))\n","import React, { useEffect } from 'react'\nimport { Alert } from 'antd'\nimport UserTable from './components/user-table'\nimport UserInviteForm from './components/user-invite-form'\nimport { inject, observer } from 'mobx-react'\n\nfunction UsersPage(props) {\n  const { userStore } = props\n\n  useEffect(() => {\n    if (!userStore.isFetched) {\n      userStore.fetch()\n    }\n  }, [])\n\n  return (\n    <>\n      {userStore.error && (\n        <Alert type=\"error\" message={userStore.error.message} />\n      )}\n      <UserInviteForm />\n      <UserTable data={userStore.data} isLoading={userStore.isLoading} />\n    </>\n  )\n}\n\nexport default inject('userStore')(observer(UsersPage))\n","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { observer, inject } from 'mobx-react'\nimport SearchPage from '../pages/search'\nimport RealtyPage from '../pages/realty'\nimport BuildingsPage from '../pages/buildings'\nimport HousingComplexPage from '../pages/housing-complex'\nimport DevelopersPage from '../pages/developers'\nimport UsersPage from '../pages/users'\n\nfunction Routes(props) {\n  const { currentUserStore } = props\n\n  return (\n    <Switch>\n      <Route path=\"/realty\" exact component={RealtyPage} />\n      <Route path=\"/buildings\" component={BuildingsPage} />\n      <Route path=\"/housing-complex:id?\" component={HousingComplexPage} />\n      <Route path=\"/developers\" component={DevelopersPage} />\n      {currentUserStore.isAdmin && (\n        <Route path=\"/users\" component={UsersPage} />\n      )}\n      <Route path=\"/search\" component={SearchPage} />\n      <Redirect to=\"/realty\" />\n    </Switch>\n  )\n}\n\nexport default inject('currentUserStore')(observer(Routes))\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Menu, Button, Row, Col } from 'antd'\nimport { observer, inject } from 'mobx-react'\nimport { useLocation } from 'react-router'\nimport logo from '../../logo.png'\n\nimport './nav-bar.css'\n\nfunction NavBar(props) {\n  const { currentUserStore } = props\n  const { pathname } = useLocation()\n\n  return (\n    <div className=\"nav-bar\">\n      <div>\n        <Row type=\"flex\" align=\"center\" justify=\"space-between\">\n          <Col>\n            <Row type=\"flex\" align=\"center\">\n              <div\n                style={{\n                  width: 80,\n                  marginRight: 30,\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              >\n                <Link to=\"/realty\">\n                  <img\n                    src={logo}\n                    style={{\n                      width: '100%',\n                      height: 'auto',\n                      position: 'relative',\n                    }}\n                  />\n                </Link>\n              </div>\n              <Menu selectedKeys={[pathname]} mode=\"horizontal\" theme=\"dark\">\n                <Menu.Item key=\"/realty\">\n                  <Link to=\"/realty\">Объекты</Link>\n                </Menu.Item>\n                <Menu.Item key=\"/buildings\">\n                  <Link to=\"/buildings\">Дома / ЖК</Link>\n                </Menu.Item>\n                <Menu.Item key=\"/housing-complex\">\n                  <Link to=\"/housing-complex\">Карточка ЖК</Link>\n                </Menu.Item>\n                <Menu.Item key=\"/developers\">\n                  <Link to=\"/developers\">Застройщик</Link>\n                </Menu.Item>\n                {currentUserStore.isAdmin && (\n                  <Menu.Item key=\"/users\">\n                    <Link to=\"/users\">Пользователи</Link>\n                  </Menu.Item>\n                )}\n                <Menu.Item key=\"/search\">\n                  <Link to=\"/search\">Поиск</Link>\n                </Menu.Item>\n              </Menu>\n            </Row>\n          </Col>\n          <Col>\n            <div className=\"nav-logout\">\n              <div className=\"nav-user-name\">\n                {currentUserStore.user.fullName}\n              </div>\n              <Button\n                onClick={() => currentUserStore.logOut()}\n                title=\"выйти\"\n                size=\"small\"\n              >\n                выйти\n              </Button>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default inject('currentUserStore')(observer(NavBar))\n","import React from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Form, Icon, Input, Button, Checkbox, Row, Col, Alert } from 'antd'\n\nimport './login.css'\n\nfunction LoginForm(props) {\n  const { currentUserStore, form } = props\n  const { getFieldDecorator } = form\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    form.validateFields(async (err, values) => {\n      if (!err) {\n        await currentUserStore.signIn(values)\n        form.resetFields()\n      }\n    })\n  }\n\n  const message = 'Обязательное поле!'\n\n  return (\n    <>\n      {currentUserStore.error && (\n        <Alert type=\"error\" message={currentUserStore.error.message} />\n      )}\n      <Form onSubmit={handleSubmit} className=\"login-form\">\n        <Form.Item>\n          <div>E-mail:</div>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <div>Пароль:</div>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <div className=\"login-form-forgot\">\n            <Row type=\"flex\" justify=\"end\">\n              <Col>\n                {/* {getFieldDecorator('remember', {\n                valuePropName: 'checked',\n                initialValue: true,\n              })(<Checkbox>Запомнить</Checkbox>)} */}\n                <Checkbox>Запомнить</Checkbox>\n              </Col>\n              <Col>\n                <a href=\"\">Восстановить пароль</a>\n              </Col>\n            </Row>\n            <div className=\"login-form-footer\">\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                loading={currentUserStore.isLoading}\n                size=\"large\"\n              >\n                Войти\n              </Button>\n            </div>\n          </div>\n        </Form.Item>\n      </Form>\n    </>\n  )\n}\n\nconst WrappedLoginForm = Form.create({})(LoginForm)\n\nexport default inject('currentUserStore')(observer(WrappedLoginForm))\n","import React from 'react'\nimport { Form, Input, Button, Row, Alert } from 'antd'\nimport { inject, observer } from 'mobx-react'\n\nimport './create-user.css'\n\nfunction CreateUserForm(props) {\n  const { form, currentUserStore, onCreated } = props\n  const { getFieldDecorator } = form\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    form.validateFields(async (err, values) => {\n      if (!err) {\n        await currentUserStore.signUp(values, onCreated)\n        form.resetFields()\n      }\n    })\n  }\n\n  const message = 'Обязательное поле!'\n\n  return (\n    <>\n      {currentUserStore.error && (\n        <Alert type=\"error\" message={currentUserStore.error.message} />\n      )}\n      <div className=\"create-user\">\n        <Form onSubmit={handleSubmit}>\n          <Form.Item>\n            <Form.Item>\n              <div>E-mail:</div>\n              {getFieldDecorator('email', {\n                rules: [{ required: true, message }],\n              })(<Input type=\"email\" />)}\n            </Form.Item>\n            <Form.Item>\n              <div>Пароль:</div>\n              {getFieldDecorator('password', {\n                rules: [{ required: true, message }],\n              })(<Input type=\"password\" />)}\n            </Form.Item>\n            <div>ФИО:</div>\n            {getFieldDecorator('fullName', {\n              rules: [{ required: true, message }],\n            })(<Input type=\"text\" />)}\n          </Form.Item>\n          <Form.Item>\n            <div>Контактный номер телефона:</div>\n            {getFieldDecorator('phoneNumber', {\n              rules: [{ required: true, message }],\n            })(<Input type=\"tel\" />)}\n          </Form.Item>\n          <Form.Item>\n            <div>Компания:</div>\n            {getFieldDecorator('company', {\n              rules: [{ required: true, message }],\n            })(<Input type=\"text\" />)}\n          </Form.Item>\n          <Form.Item>\n            <div>Город:</div>\n            {getFieldDecorator('city', {\n              rules: [{ required: true, message }],\n            })(<Input type=\"text\" />)}\n          </Form.Item>\n          <Form.Item>\n            <div>Секретный код:</div>\n            {getFieldDecorator('secretCode', {\n              rules: [{ required: true, message }],\n            })(<Input type=\"text\" />)}\n          </Form.Item>\n          {/* <Form.Item\n        {getFieldDecorator('photo', { rules: [{ required: true, message }] })(\n          <Input placeholder=\"Фото\" type=\"file\" />\n        )}\n      </Form.Item> */}\n          <Row type=\"flex\" justify=\"center\">\n            <Button\n              className=\"create-user-button\"\n              htmlType=\"submit\"\n              type=\"primary\"\n              loading={currentUserStore.isLoading}\n              size=\"large\"\n            >\n              Отправить\n            </Button>\n          </Row>\n        </Form>\n      </div>\n    </>\n  )\n}\n\nconst WrappedCreateUserForm = Form.create({})(CreateUserForm)\n\nexport default inject('currentUserStore')(observer(WrappedCreateUserForm))\n","import React, { useState } from 'react'\nimport { Tabs } from 'antd'\nimport LoginForm from './components/login'\nimport CreateUserForm from './components/create-user'\n\nconst { TabPane } = Tabs\n\nexport default function SignInForm() {\n  const [activeTab, setActiveTab] = useState('login')\n\n  return (\n    <div className=\"login-form\">\n      <Tabs activeKey={activeTab} onChange={setActiveTab} type=\"card\">\n        <TabPane tab=\"Войти\" key=\"login\">\n          <LoginForm />\n        </TabPane>\n        <TabPane tab=\"Регистрация\" key=\"create-user\">\n          <CreateUserForm onCreated={() => setActiveTab('login')} />\n        </TabPane>\n      </Tabs>\n    </div>\n  )\n}\n","import React from 'react'\nimport Routes from '../routes'\nimport NavBar from '../components/navbar'\nimport { Redirect } from 'react-router-dom'\nimport SignIn from '../components/form/signin'\nimport { observer, inject } from 'mobx-react'\n\nimport './app.css'\nimport 'antd/dist/antd.min.css'\n\nfunction App(props) {\n  const { currentUserStore } = props\n\n  return (\n    <div className=\"container\">\n      {currentUserStore.isAuth ? (\n        <>\n          <NavBar />\n          <Routes />\n        </>\n      ) : (\n        <>\n          <Redirect to=\"/\" />\n          <SignIn />\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default inject('currentUserStore')(observer(App))\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'mobx-react'\nimport * as store from './store'\n\nReactDOM.render(\n  <Provider {...store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}