{"version":3,"sources":["pages/search/components/search-nav/index.js","pages/search/components/search-result-table/index.js","pages/search/index.js","api/index.js","permission/roles.js","store/current-user-store.js","utils.js","store/base-store.js","store/user-store.js","store/building-store.js","store/realty-store.js","store/developers-store.js","store/search-store.js","pages/realty/components/realty-table/index.js","components/form/create-antd-field.js","pages/realty/components/realty-form/index.js","pages/realty/index.js","pages/buildings/components/buildings-table/index.js","pages/buildings/components/buildings-form/index.js","pages/buildings/index.js","pages/developers/components/developer-form/index.js","pages/developers/components/developer-table/index.js","pages/developers/index.js","pages/users/components/user-table/index.js","pages/users/components/user-invite-form/index.js","pages/users/index.js","routes/index.js","components/navbar/index.js","components/form/signin/components/login/index.js","components/form/signin/components/create-user/index.js","components/form/signin/index.js","app/index.js","index.js"],"names":["InputGroup","Input","Group","SearchNav","props","fields","onChangeField","onReset","onSearch","isSubmiting","className","type","gutter","span","compact","style","width","onChange","value","priceFrom","priceTo","areaFrom","areaTo","floorFrom","floorTo","amountBedrooms","mode","Option","key","dateMoment","dateString","format","buildFinishDate","districtName","onClick","loading","columns","title","dataIndex","render","SeaarchResultTable","data","dataSource","size","rowKey","inject","observer","searchStore","setField","bind","reset","search","isLoading","error","message","result","BASE_URL","axiosInstance","axios","create","baseURL","headers","client","url","params","post","patch","USER_ROLES","ADMIN","id","label","MANAGER","USER","CurrentUserStore","user","cb","this","_fetching","then","notification","success","_fetchFailure","method","qs","stringify","_fetchSuccess","res","parse","window","location","href","Error","currentUserStore","roleId","decorate","observable","isAuth","computed","isAdmin","logIn","action","signIn","logOut","bound","BaseStore","apiUrl","initialData","messages","_apiUrl","editableItemId","isFetched","Array","isArray","item","addSuccess","addFailure","index","indexOf","i","updateSuccess","updateFailure","filter","removeSuccess","removeFailure","BaseStoreDecorated","isEditingItem","editItem","saveEditItem","resetEditItem","fetch","addItem","updateItem","removeItem","UserStore","email","userStore","invite","BuildingsStore","buildingsStore","RealtyStore","realtyStore","DevelopersStore","developersStore","SearchStore","_initialValues","response","icon","RealtyTable","onUpdate","nextColumns","isViewOnly","column","marginBottom","disabled","FormItem","Form","Item","Select","CreateAntField","AntComponent","field","form","hasFeedback","selectOptions","submitCount","formItemLayout","required","touched","name","submitted","hasError","errors","submittedError","touchedError","help","validateStatus","onBlur","setFieldTouched","target","setFieldValue","locale","ruLocale","map","text","AntDatePicker","TimePicker","DatePicker","AntInput","AntInputNumber","Switch","InputNumber","AntChecbox","Checkbox","RealtyForm","useState","isSubmitting","setIsSubmitting","onSubmit","isEditable","editableItem","onCloseEditItem","initialValues","description","address","area","buildingId","ceilingHeight","deadline","moment","floor","info","price","realtyType","rented","secondary","values","a","Object","checked","resetForm","component","justify","htmlType","marginTop","TabPane","Tabs","activeTab","setActiveTab","useEffect","activeKey","tab","BuildingTable","scroll","x","buildStartDate","commercialArea","districtId","elevator","facade","fee","floors","installment","metro","mortgage","parkingInfo","parkingPriceFrom","parkingPriceTo","presentationLink","priceLink","realtyInfo","special","windows","commonContacts","viewContacts","viewTime","DeveloperTable","defaultValue","role","UserTable","setEmail","setIsSubmiting","handleSubmit","e","path","exact","RealtyPage","BuildingsPage","DevelopersPage","UsersPage","SearchPage","to","pathname","useLocation","selectedKeys","theme","fullName","WrappedLoginForm","getFieldDecorator","preventDefault","validateFields","err","resetFields","rules","prefix","color","WrappedCreateUserForm","onCreated","signUp","SignInForm","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.ce16d72d.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Input,\n  Col,\n  Row,\n  Select,\n  InputNumber,\n  DatePicker,\n  AutoComplete,\n  Button,\n  Checkbox,\n  Form,\n} from 'antd'\n\nimport './search-nav.css'\n\nconst InputGroup = Input.Group\n\nexport default function SearchNav(props) {\n  const { fields, onChangeField, onReset, onSearch, isSubmiting } = props\n\n  return (\n    <div className=\"search-nav\">\n      <Form>\n        <Row type=\"flex\" gutter={20}>\n          <Col span={4}>\n            <label>Цена от - до</label>\n            <InputGroup compact>\n              <InputNumber\n                style={{ width: '50%' }}\n                onChange={value => onChangeField('priceFrom', value)}\n                value={fields.priceFrom}\n              />\n              <InputNumber\n                style={{ width: '50%' }}\n                onChange={value => onChangeField('priceTo', value)}\n                value={fields.priceTo}\n              />\n            </InputGroup>\n          </Col>\n          <Col span={4}>\n            <label>Площадь от - до</label>\n            <InputGroup compact>\n              <InputNumber\n                style={{ width: '50%' }}\n                onChange={value => onChangeField('areaFrom', value)}\n                value={fields.areaFrom}\n              />\n              <InputNumber\n                style={{ width: '50%' }}\n                onChange={value => onChangeField('areaTo', value)}\n                value={fields.areaTo}\n              />\n            </InputGroup>\n          </Col>\n          <Col span={4}>\n            <label>Этажность от - до</label>\n            <InputGroup compact>\n              <InputNumber\n                style={{ width: '50%' }}\n                onChange={value => onChangeField('floorFrom', value)}\n                value={fields.floorFrom}\n              />\n              <InputNumber\n                style={{ width: '50%' }}\n                onChange={value => onChangeField('floorTo', value)}\n                value={fields.floorTo}\n              />\n            </InputGroup>\n          </Col>\n          <Col span={4}>\n            <label>Спальни</label>\n            <InputNumber\n              style={{ width: '100%' }}\n              onChange={value => onChangeField('amountBedrooms', value)}\n              value={fields.amountBedrooms}\n            />\n          </Col>\n          <Col span={4}>\n            <label>Опции / отделка</label>\n            <Select\n              mode=\"multiple\"\n              onChange={value => {}}\n              style={{ width: '100%' }}\n            >\n              <Select.Option key=\"1\">1</Select.Option>\n              <Select.Option key=\"2\">2</Select.Option>\n              <Select.Option key=\"3\">3</Select.Option>\n            </Select>\n          </Col>\n          <Col span={4}>\n            <label>Срок сдачи</label>\n            <DatePicker\n              style={{ width: '100%' }}\n              onChange={(dateMoment, dateString) => {\n                onChangeField('buildFinishDate', dateMoment.format())\n              }}\n              value={fields.buildFinishDate}\n            />\n          </Col>\n        </Row>\n\n        <br />\n\n        <Row type=\"flex\" gutter={20}>\n          <Col span={4}>\n            <label>Район</label>\n            <AutoComplete\n              onChange={value => {\n                onChangeField('districtName', value)\n              }}\n              style={{ width: '100%' }}\n              value={fields.districtName}\n            >\n              <AutoComplete.Option key=\"1\">1</AutoComplete.Option>\n              <AutoComplete.Option key=\"2\">2</AutoComplete.Option>\n              <AutoComplete.Option key=\"3\">3</AutoComplete.Option>\n            </AutoComplete>\n          </Col>\n          <Col span={4}>\n            <label>Комплекс / дом</label>\n            <div>\n              <Checkbox>Комплекс</Checkbox>\n            </div>\n            <div>\n              <Checkbox>Дом</Checkbox>\n            </div>\n          </Col>\n          <Col span={4}>\n            <label>Первичка/вторичка</label>\n            <div>\n              <Checkbox>Вторичка</Checkbox>\n            </div>\n            <div>\n              <Checkbox>Первичка</Checkbox>\n            </div>\n          </Col>\n          <Col span={4}>\n            <label>На карте</label>\n          </Col>\n          <Col span={4}>\n            <label>Корпус</label>\n          </Col>\n          <Col span={4}>\n            <Button.Group style={{ width: '100%' }}>\n              <Button type=\"danger\" style={{ width: '50%' }} onClick={onReset}>\n                Сбросить\n              </Button>\n              <Button\n                type=\"primary\"\n                style={{ width: '50%' }}\n                onClick={onSearch}\n                loading={isSubmiting}\n              >\n                Поиск\n              </Button>\n            </Button.Group>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Table } from 'antd'\n\nconst columns = [\n  {\n    title: 'id',\n    dataIndex: 'id',\n    key: 'id',\n  },\n  {\n    title: 'id строения',\n    dataIndex: 'buildingId',\n    key: 'buildingId',\n  },\n  {\n    title: 'тип строения',\n    dataIndex: 'realtyType',\n    key: 'realtyType',\n  },\n  {\n    title: 'адрес',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  {\n    title: 'площадь',\n    dataIndex: 'area',\n    key: 'area',\n  },\n  {\n    title: 'цена',\n    dataIndex: 'price',\n    key: 'price',\n  },\n  {\n    title: 'цена за метр',\n    dataIndex: 'pricePerSquareMeter',\n    key: 'pricePerSquareMeter',\n  },\n  {\n    title: 'количество спален',\n    dataIndex: 'amountBedrooms',\n    key: 'amountBedrooms',\n  },\n  {\n    title: 'высота потолка',\n    dataIndex: 'ceilingHeight',\n    key: 'ceilingHeight',\n  },\n  {\n    title: 'этаж',\n    dataIndex: 'floor',\n    key: 'floor',\n  },\n  {\n    title: 'аренда',\n    dataIndex: 'rented',\n    key: 'rented',\n  },\n  {\n    title: 'дата сдачи',\n    dataIndex: 'deadline',\n    key: 'deadline',\n  },\n  {\n    title: 'вторичка',\n    dataIndex: 'secondary',\n    key: 'secondary',\n    render: value => (value ? '+' : '-'),\n  },\n  {\n    title: 'описание',\n    dataIndex: 'info',\n    key: 'info',\n  },\n]\n\nexport default function SeaarchResultTable(props) {\n  const { data } = props\n\n  return <Table dataSource={data} size=\"small\" columns={columns} rowKey=\"id\" />\n}\n","import React from 'react'\nimport SearchNav from './components/search-nav'\nimport SearchResultTable from './components/search-result-table'\nimport { observer, inject } from 'mobx-react'\nimport { Alert } from 'antd'\n\nfunction Search(props) {\n  const { searchStore } = props\n\n  return (\n    <>\n      <SearchNav\n        fields={searchStore.fields}\n        onChangeField={searchStore.setField.bind(searchStore)}\n        onReset={searchStore.reset.bind(searchStore)}\n        onSearch={searchStore.search.bind(searchStore)}\n        isSubmiting={searchStore.isLoading}\n      />\n      {searchStore.error && (\n        <Alert type=\"error\" message={searchStore.error.message} />\n      )}\n      <SearchResultTable data={searchStore.result} />\n    </>\n  )\n}\n\nexport default inject('searchStore')(observer(Search))\n","import axios from 'axios'\n\n// export const BASE_URL = 'http://10.0.0.101:8088'\n// export const BASE_URL = 'http://localhost:8088'\nexport const BASE_URL = 'http://37.230.116.140:8088'\n\n/**\n  \n  /api/{entity}/add\n  где entity принимает значения user, realty, building, developer, district\n  это POST запросы, которые в body пихают сущность\n  /api/{entity}/update\n  /api/{entity}/delete\n \n*/\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL + '/api/v1',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  // baseURL: 'http://localhost:8088/api/v1',\n  // headers: { 'X-Custom-Header': 'foobar' },\n})\n\nexport const client = {\n  get: (url, params) => axiosInstance(url, params),\n  post: (url, params) => axiosInstance.post(url, params),\n  delete: url => axiosInstance.delete(url),\n  patch: (url, params) => axiosInstance.patch(url, params),\n}\n","export const USER_ROLES = {\n  ADMIN: {\n    id: 1,\n    label: 'админ',\n  },\n  MANAGER: {\n    id: 2,\n    label: 'менеджер',\n  },\n  USER: {\n    id: 3,\n    label: 'пользователь',\n  },\n}\n","import { observable, computed, action, decorate } from 'mobx'\nimport { client, BASE_URL } from '../api'\nimport axios from 'axios'\nimport { USER_ROLES } from '../permission'\nimport qs from 'query-string'\nimport { notification } from 'antd'\nimport { getUrlError } from '../utils'\n\nclass CurrentUserStore {\n  user = null\n\n  isLoading = false\n\n  error = null\n\n  get isAuth() {\n    return this.user !== null\n  }\n\n  get isAdmin() {\n    return (\n      this.user &&\n      (currentUserStore.user.roleId === USER_ROLES.ADMIN.id ||\n        currentUserStore.user.roleId === USER_ROLES.MANAGER.id)\n    )\n  }\n\n  signUp(user, cb) {\n    this._fetching()\n\n    return client\n      .post('user', user)\n      .then(() => {\n          notification.success({ message: 'Учетная запись создана' })\n          this.isLoading = false\n          if (cb) cb()\n      })\n      .catch(this._fetchFailure)\n  }\n\n  signIn(user) {\n    this._fetching()\n\n    return axios({\n      method: 'post',\n      url: BASE_URL + '/login',\n      data: qs.stringify(user),\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    })\n      .then(() => {\n        client\n          .get('current-user')\n          .then(this._fetchSuccess)\n          .catch(this._fetchFailure)\n      })\n      .catch(this._fetchFailure)\n  }\n\n  logOut() {\n    axios({\n      method: 'post',\n      url: BASE_URL + '/logout',\n    })\n      .then(res => {\n        this.user = null\n      })\n      .catch(this._fetchFailure)\n  }\n\n  _fetching() {\n    this.isLoading = true\n    this.error = null\n  }\n\n  _fetchSuccess(res) {\n    if (getUrlError()) {\n      this._fetchFailure(new Error('Ошибка логина'))\n    } else {\n      this.user = res.data\n      this.isLoading = false\n    }\n  }\n\n  _fetchFailure(error) {\n    this.error = error\n    this.isLoading = false\n    notification.error({ message: error.message })\n  }\n}\n\nconst CurrentUserStoreDecorated = decorate(CurrentUserStore, {\n  user: observable,\n  isAuth: computed,\n  isAdmin: computed,\n\n  logIn: action,\n  signIn: action,\n  logOut: action,\n\n  _fetching: action.bound,\n  _fetchSuccess: action.bound,\n  _fetchFailure: action.bound,\n})\n\nexport const currentUserStore = new CurrentUserStoreDecorated()\n","import qs from 'query-string'\n\nexport const getUrlError = () => {\n    const parsed = qs.parse(window.location.href)\n    return parsed.error\n}","import { observable, action, decorate, computed } from 'mobx'\nimport { client } from '../api'\nimport { notification } from 'antd'\n\nclass BaseStore {\n  _apiUrl = ''\n\n  data = null\n\n  editableItemId = null\n\n  isLoading = false\n\n  isFetched = false\n\n  error = false\n\n  static messages = {\n    addSuccess: 'Объект успешно добавлен',\n    addFailure: 'Объект не добавлен',\n    updateSuccess: 'Объект успешно обновлен',\n    updateFailure: 'Объект не обновлен',\n    removeSuccess: 'Объект успешно удален',\n    removeFailure: 'Объект не удален',\n  }\n\n  constructor(apiUrl, initialData = null, messages = BaseStore.messages) {\n    this._apiUrl = apiUrl\n    this.data = initialData\n    this.messages = messages\n  }\n\n  get isEditingItem() {\n    return this.editableItemId !== null\n  }\n\n  fetch() {\n    this._fetching()\n\n    client\n      .get(this._apiUrl)\n      .then(res => {\n        if (Array.isArray(res.data)) {\n          this.data = res.data\n          this._fetchSuccess()\n          this.isFetched = true\n        }\n      })\n      .catch(this._fetchFailure)\n  }\n\n  addItem(item) {\n    this._fetching()\n\n    client\n      .post(this._apiUrl, item)\n      .then(res => {\n        if (res.data !== null) {\n          this.data = [...(this.data || []), res.data]\n          this._fetchSuccess()\n          notification.success({ message: this.messages.addSuccess })\n        } else {\n          notification.error({ message: this.messages.addFailure })\n        }\n      })\n      .catch(this._fetchFailure)\n  }\n\n  updateItem(id, data) {\n    this._fetching()\n\n    return client\n      .patch(`${this._apiUrl}/${id || this.editableItemId}`, data)\n      .then(res => {\n        const index = this.data.indexOf(i => i.id === res.data.id)\n        this.data[index] = res.data\n\n        if (this.editableItemId) {\n          this.editableItemId = null\n        }\n\n        notification.success({ message: this.messages.updateSuccess })\n        this._fetchSuccess()\n      })\n      .catch(error => {\n        this._fetchFailure(error)\n        notification.error({ message: this.messages.updateFailure })\n      })\n  }\n\n  removeItem(id) {\n    this._fetching()\n\n    client\n      .delete(`${this._apiUrl}/${id}`)\n      .then(res => {\n        this.data = this.data.filter(i => i.id !== id)\n        this._fetchSuccess()\n        notification.success({ message: this.messages.removeSuccess })\n      })\n      .catch(error => {\n        this._fetchFailure(error)\n        notification.error({ message: this.messages.removeFailure })\n      })\n  }\n\n  editItem(id) {\n    this.editableItemId = id\n  }\n\n  resetEditItem() {\n    this.editableItemId = null\n  }\n\n  _fetching() {\n    this.isLoading = true\n    this.error = null\n  }\n\n  _fetchSuccess() {\n    this.isLoading = false\n  }\n\n  _fetchFailure(error) {\n    this.error = error\n    this.isLoading = false\n  }\n}\n\nconst BaseStoreDecorated = decorate(BaseStore, {\n  data: observable,\n  editableItemId: observable,\n  isLoading: observable,\n  isFetched: observable,\n  error: observable,\n\n  isEditingItem: computed,\n  editItem: action,\n  saveEditItem: action,\n  resetEditItem: action,\n\n  fetch: action,\n  addItem: action,\n  updateItem: action,\n  removeItem: action,\n\n  _fetching: action.bound,\n  _fetchSuccess: action.bound,\n  _fetchFailure: action.bound,\n})\n\nexport default BaseStoreDecorated\n","import { decorate, action } from 'mobx'\nimport BaseStore from './base-store'\nimport { client } from '../api'\n\n/**\n * пользователи\n */\nclass UserStore extends BaseStore {\n  constructor() {\n    super('user')\n  }\n\n  invite(email) {\n    return client.post(`${this._apiUrl}/invite`, { email })\n  }\n}\n\nconst UserStoreDecorated = decorate(UserStore, {\n  invite: action\n})\n\nexport const userStore = new UserStoreDecorated()\n","import { decorate } from 'mobx'\nimport BaseStore from './base-store'\n\n/**\n * объекты / строения\n */\nclass BuildingsStore extends BaseStore {\n  constructor() {\n    super('building')\n  }\n}\n\nconst BuildingsStoreDecorated = decorate(BuildingsStore, {})\n\nexport const buildingsStore = new BuildingsStoreDecorated()\n","import { decorate } from 'mobx'\nimport BaseStore from './base-store'\n\n/**\n * дома и жилищные комплексы\n * api realty\n */\nclass RealtyStore extends BaseStore {\n  constructor() {\n    super('realty')\n  }\n}\n\nconst RealtyStoreDecorated = decorate(RealtyStore, {})\n\nexport const realtyStore = new RealtyStoreDecorated()\n","import { decorate } from 'mobx'\nimport BaseStore from './base-store'\n\n/**\n * застройщики\n */\nclass DevelopersStore extends BaseStore {\n  constructor() {\n    super('developer')\n  }\n}\n\nconst DeveloperStoreDecorated = decorate(DevelopersStore, {})\n\nexport const developersStore = new DeveloperStoreDecorated()\n","import { observable, computed, action, decorate } from 'mobx'\n\nimport { client } from '../api'\nclass SearchStore {\n  _initialValues = {\n    priceFrom: null,\n    priceTo: null,\n    areaFrom: null,\n    areaTo: null,\n    floorFrom: null,\n    floorTo: null,\n    amountBedrooms: null,\n    buildFinishDate: null,\n    districtName: null,\n  }\n\n  isLoading = false\n\n  fields = {\n    ...this._initialValues,\n  }\n\n  result = []\n\n  error = null\n\n  setField(key, value) {\n    this.fields = {\n      ...this.fields,\n      [key]: value,\n    }\n  }\n\n  search() {\n    this.isLoading = true\n\n    client\n      .post('search', this.fields)\n      .then(response => {\n        this.result = response.data\n        this.isLoading = false\n      })\n      .catch(error => {\n        this.error = error\n        this.isLoading = false\n      })\n  }\n\n  reset() {\n    this.error = null\n    this.result = []\n    this.fields = {\n      ...this._initialValues,\n    }\n  }\n}\n\nconst SearchStoreDecorated = decorate(SearchStore, {\n  result: observable,\n  isLoading: observable,\n  fields: observable,\n  error: observable,\n  setField: action,\n  search: action,\n  reset: action,\n})\n\nexport const searchStore = new SearchStoreDecorated()\n","import React from 'react'\nimport { Table, Button } from 'antd'\nimport { realtyStore } from '../../../../store'\n\nconst columns = [\n  {\n    title: 'id',\n    dataIndex: 'id',\n    key: 'id',\n  },\n  {\n    title: 'адрес',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  {\n    title: 'тип',\n    dataIndex: 'realtyType',\n    key: 'realtyType',\n  },\n  {\n    title: 'этаж',\n    dataIndex: 'floor',\n    key: 'floor',\n  },\n  {\n    title: 'площадь',\n    dataIndex: 'area',\n    key: 'area',\n  },\n  {\n    title: 'цена',\n    dataIndex: 'price',\n    key: 'price',\n  },\n  {\n    title: 'Цена за метр',\n    dataIndex: 'pricePerSquareMeter',\n    key: 'pricePerSquareMeter',\n  },\n  {\n    title: 'Количество спален',\n    dataIndex: 'amountBedrooms',\n    key: 'amountBedrooms',\n  },\n  {\n    title: 'Высота потолков',\n    dataIndex: 'ceilingHeight',\n    key: 'ceilingHeight',\n  },\n  {\n    title: 'Сдан',\n    dataIndex: 'rented',\n    key: 'rented',\n    render: value => (value ? '+' : '-'),\n  },\n  {\n    title: 'Вторичка',\n    dataIndex: 'secondary',\n    key: 'secondary',\n    render: value => (value ? '+' : '-'),\n  },\n  {\n    title: 'Срок сдачи',\n    dataIndex: 'deadline',\n    key: 'deadline',\n  },\n  {\n    title: 'Информация об объекте',\n    dataIndex: 'info',\n    key: 'info',\n  },\n  {\n    title: '',\n    dataIndex: null,\n    key: '_nav',\n    render: item => (\n      <Button.Group>\n        <Button\n          onClick={() => realtyStore.removeItem(item.id)}\n          type=\"primary\"\n          icon=\"delete\"\n        />\n        <Button\n          onClick={() => realtyStore.editItem(item.id)}\n          type=\"primary\"\n          icon=\"edit\"\n        />\n      </Button.Group>\n    ),\n  },\n]\n\nexport default function RealtyTable(props) {\n  const { data, isLoading, onUpdate, isViewOnly } = props\n\n  const nextColumns = isViewOnly\n    ? columns.filter(column => '_nav' !== column.key)\n    : columns\n\n  return (\n    <>\n      <nav style={{ marginBottom: 15 }}>\n        <Button type=\"primary\" onClick={onUpdate} disabled={isLoading}>\n          Обновить\n        </Button>\n      </nav>\n      <Table\n        dataSource={data}\n        columns={nextColumns}\n        size=\"small\"\n        rowKey=\"id\"\n        loading={isLoading}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport {\n  DatePicker,\n  Form,\n  Input,\n  TimePicker,\n  Select,\n  Switch,\n  InputNumber,\n  Checkbox,\n} from 'antd'\n// import { InputAutocomplete } from '../../input'\nimport ruLocale from 'antd/lib/date-picker/locale/ru_RU'\n\nimport 'moment/locale/ru'\n\nconst FormItem = Form.Item\nconst { Option } = Select\n\nconst CreateAntField = AntComponent => ({\n  field,\n  form,\n  hasFeedback,\n  label,\n  selectOptions,\n  submitCount,\n  type,\n  formItemLayout = {},\n  onChange,\n  className,\n  required,\n  ...props\n}) => {\n  const touched = form.touched[field.name]\n  const submitted = submitCount > 0\n  const hasError = form.errors[field.name]\n  const submittedError = hasError && submitted\n  const touchedError = hasError && touched\n\n  const handleInputChange = ({ target: { value } }) =>\n    form.setFieldValue(field.name, value)\n\n  const handleChange = value => {\n    form.setFieldValue(field.name, value)\n    if (onChange) onChange(value)\n  }\n  const handleBlur = () => form.setFieldTouched(field.name, true)\n\n  return (\n    <div className={className}>\n      <FormItem\n        label={label}\n        required={required}\n        hasFeedback={\n          (hasFeedback && submitted) || (hasFeedback && touched) ? true : false\n        }\n        help={submittedError || touchedError ? hasError : false}\n        validateStatus={submittedError || touchedError ? 'error' : ''}\n        {...formItemLayout}\n      >\n        <AntComponent\n          {...field}\n          {...props}\n          onBlur={handleBlur}\n          onChange={type ? handleInputChange : handleChange}\n          locale={ruLocale}\n        >\n          {selectOptions &&\n            selectOptions.map(({ text, value, id }) => (\n              <Option key={id} value={value}>\n                {text}\n              </Option>\n            ))}\n        </AntComponent>\n      </FormItem>\n    </div>\n  )\n}\n\nexport const AntTimePicker = CreateAntField(TimePicker)\nexport const AntDatePicker = CreateAntField(DatePicker)\nexport const AntInput = CreateAntField(Input)\n// export const AntInputAutocomplete = CreateAntField(InputAutocomplete)\nexport const AntSelect = CreateAntField(Select)\nexport const AntSwitch = CreateAntField(Switch)\nexport const AntInputNumber = CreateAntField(InputNumber)\nexport const AntChecbox = CreateAntField(Checkbox)\n","import React, { useState } from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport { Button, Row, Col } from 'antd'\nimport {\n  AntInput,\n  AntDatePicker,\n  AntChecbox,\n  AntInputNumber,\n} from '../../../../components/form/create-antd-field'\nimport moment from 'moment'\n\nexport default function RealtyForm(props) {\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const { onSubmit, isEditable, editableItem, onCloseEditItem } = props\n\n  const initialValues = isEditable\n    ? {\n        description: editableItem?.description || '',\n        address: editableItem?.address || '',\n        amountBedrooms: editableItem?.amountBedrooms,\n        area: editableItem?.area,\n        buildingId: editableItem?.buildingId,\n        ceilingHeight: editableItem?.ceilingHeight,\n        deadline: moment(editableItem?.deadline),\n        floor: editableItem?.floor,\n        info: editableItem?.info,\n        price: editableItem?.price,\n        realtyType: editableItem?.realtyType,\n        rented: editableItem?.rented,\n        secondary: editableItem?.secondary,\n      }\n    : {\n        description: '',\n        address: '',\n        amountBedrooms: '',\n        area: null,\n        buildingId: 1,\n        ceilingHeight: null,\n        deadline: null,\n        floor: null,\n        info: '',\n        price: null,\n        realtyType: '',\n        rented: false,\n        secondary: false,\n      }\n\n  return (\n    <Formik\n      onSubmit={async (values, form) => {\n        if (values.rented instanceof Object) {\n          values.rented = values.rented.target.checked\n        }\n        if (values.secondary instanceof Object) {\n          values.secondary = values.secondary.target.checked\n        }\n\n        setIsSubmitting(true)\n\n        if (isEditable) {\n          await onSubmit(null, values)\n        } else {\n          await onSubmit(values)\n          form.resetForm()\n        }\n\n        setIsSubmitting(false)\n      }}\n      initialValues={initialValues}\n    >\n      {() => {\n        return (\n          <Form className=\"form\">\n            <Row type=\"flex\" gutter={20}>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  label=\"описание\"\n                  name=\"description\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"address\"\n                  label=\"адрес\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  name=\"amountBedrooms\"\n                  label=\"количество спален\"\n                  component={AntInputNumber}\n                />\n              </Col>\n              <Col span={8}>\n                <Field name=\"area\" label=\"площадь\" component={AntInputNumber} />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"buildingId\"\n                  label=\"идентификатор записи здания\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  name=\"ceilingHeight\"\n                  label=\"высота потолков\"\n                  component={AntInputNumber}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  name=\"deadline\"\n                  label=\"срок сдачи\"\n                  component={AntDatePicker}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"floor\"\n                  label=\"этаж\"\n                  component={AntInput}\n                />\n              </Col>\n              {/* <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"id\"\n                label=\"идентификатор записи БД\"\n                component={AntInput}\n              />\n            </Col> */}\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"info\"\n                  label=\"информация об объекте\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"price\"\n                  label=\"цена\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"pricePerSquareMeter\"\n                  component={AntInput}\n                  label=\"цена за квадратный метр\"\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"realtyType\"\n                  label=\"тип недвижимости\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={4}>\n                <Field name=\"rented\" label=\"сдан\" component={AntChecbox} />\n              </Col>\n              <Col span={4}>\n                <Field\n                  name=\"secondary\"\n                  label=\"вторичка\"\n                  component={AntChecbox}\n                />\n              </Col>\n              {/* <Col span={8}>\n              <Field type=\"text\" name=\"\" label=\"\" component={AntInput} />\n            </Col>\n            <Col span={8}>\n              <Field type=\"text\" name=\"\" label=\"\" component={AntInput} />\n            </Col> */}\n            </Row>\n            <Row type=\"flex\" justify=\"center\" gutter={20}>\n              <Col span={8}>\n                {isEditable ? (\n                  <Row type=\"flex\" justify=\"space-between\">\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      style={{ width: '48%', marginTop: 20 }}\n                      disabled={isSubmitting}\n                    >\n                      Сохранить\n                    </Button>\n                    <Button\n                      type=\"danger\"\n                      style={{ width: '48%', marginTop: 20 }}\n                      disabled={isSubmitting}\n                      onClick={onCloseEditItem}\n                    >\n                      Отмена\n                    </Button>\n                  </Row>\n                ) : (\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    style={{ width: '100%', marginTop: 20 }}\n                    disabled={isSubmitting}\n                  >\n                    Добавить\n                  </Button>\n                )}\n              </Col>\n            </Row>\n          </Form>\n        )\n      }}\n    </Formik>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport RealtyTable from './components/realty-table'\nimport RealtyForm from './components/realty-form'\nimport { observer, inject } from 'mobx-react'\nimport { Tabs, Alert } from 'antd'\n\nconst { TabPane } = Tabs\n\nfunction RealtyPage(props) {\n  const { realtyStore, currentUserStore } = props\n\n  const [activeTab, setActiveTab] = useState('1')\n\n  useEffect(() => {\n    if (!realtyStore.isFetched) {\n      realtyStore.fetch()\n    }\n  }, [])\n\n  useEffect(() => {\n    const activeTab = realtyStore.isEditingItem ? '3' : '1'\n    setActiveTab(activeTab)\n  }, [realtyStore.isEditingItem])\n\n  return (\n    <>\n      {realtyStore.error && (\n        <Alert message={realtyStore.error.message} type=\"error\" />\n      )}\n      {currentUserStore.isAdmin ? (\n        <Tabs type=\"card\" onChange={setActiveTab} activeKey={activeTab}>\n          <TabPane tab=\"объекты\" key=\"1\" disabled={realtyStore.isEditingItem}>\n            <RealtyTable\n              data={realtyStore.data}\n              isLoading={realtyStore.isLoading}\n              onUpdate={realtyStore.fetch.bind(realtyStore)}\n            />\n          </TabPane>\n          <TabPane\n            tab=\"добавить объект\"\n            key=\"2\"\n            disabled={realtyStore.isEditingItem}\n          >\n            <RealtyForm onSubmit={realtyStore.addItem.bind(realtyStore)} />\n          </TabPane>\n          {realtyStore.isEditingItem && (\n            <TabPane tab=\"редактировать объект\" key=\"3\">\n              <RealtyForm\n                onSubmit={realtyStore.updateItem.bind(realtyStore)}\n                onCloseEditItem={realtyStore.resetEditItem.bind(realtyStore)}\n                editableItem={realtyStore.editableItem}\n                isEditable\n              />\n            </TabPane>\n          )}\n        </Tabs>\n      ) : (\n        <RealtyTable\n          isViewOnly\n          data={realtyStore.data}\n          isLoading={realtyStore.isLoading}\n          onUpdate={realtyStore.fetch.bind(realtyStore)}\n        />\n      )}\n    </>\n  )\n}\n\nexport default inject('realtyStore', 'currentUserStore')(observer(RealtyPage))\n","import React from 'react'\nimport { Table, Button } from 'antd'\nimport { buildingsStore } from '../../../../store'\n\nconst columns = [\n  {\n    title: 'id',\n    dataIndex: 'id',\n    key: 'id',\n  },\n  {\n    title: 'Адрес',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  {\n    title: 'Метро',\n    dataIndex: 'metro',\n    key: 'metro',\n  },\n  {\n    title: 'Информация о недвижимости',\n    dataIndex: 'realtyInfo',\n    key: 'realtyInfo',\n  },\n  {\n    title: 'Этаж',\n    dataIndex: 'floors',\n    key: 'floors',\n  },\n  {\n    title: 'Начало строительства',\n    dataIndex: 'buildStartDate',\n    key: 'buildStartDate',\n  },\n  {\n    title: 'Окончание строительства',\n    dataIndex: 'buildFinishDate',\n    key: 'buildFinishDate',\n  },\n  {\n    title: 'Лифты',\n    dataIndex: 'elevator',\n    key: 'elevator',\n  },\n  {\n    title: 'Фасад',\n    dataIndex: 'facade',\n    key: 'facade',\n  },\n  {\n    title: 'Окна',\n    dataIndex: 'windows',\n    key: 'windows',\n  },\n  {\n    title: 'Информация о парковке',\n    dataIndex: 'parkingInfo',\n    key: 'parkingInfo',\n  },\n  {\n    title: 'Цена парковки от',\n    dataIndex: 'parkingPriceFrom',\n    key: 'parkingPriceFrom',\n  },\n  {\n    title: 'Цена парковки до',\n    dataIndex: 'parkingPriceTo',\n    key: 'parkingPriceTo',\n  },\n  {\n    title: 'Ссылка на презентацию',\n    dataIndex: 'presentationLink',\n    key: 'presentationLink',\n  },\n  {\n    title: 'Ссылка на прайс',\n    dataIndex: 'priceLink',\n    key: 'priceLink',\n  },\n  {\n    title: 'Ипотека',\n    dataIndex: 'mortgage',\n    key: 'mortgage',\n  },\n  {\n    title: 'Рассрочка',\n    dataIndex: 'installment',\n    key: 'installment',\n  },\n  {\n    title: 'Акции',\n    dataIndex: 'special',\n    key: 'special',\n  },\n  {\n    title: 'Комерческая площадь',\n    dataIndex: 'commercialArea',\n    key: 'commercialArea',\n  },\n  {\n    title: 'Вознаграждение',\n    dataIndex: 'fee',\n    key: 'fee',\n  },\n  {\n    title: '',\n    dataIndex: null,\n    key: '_nav',\n    render: item => (\n      <Button\n        onClick={() => buildingsStore.removeItem(item.id)}\n        type=\"primary\"\n        icon=\"delete\"\n      />\n    ),\n  },\n]\n\nexport default function BuildingTable(props) {\n  const { data, isLoading, onUpdate, isViewOnly } = props\n\n  const nextColumns = isViewOnly\n    ? columns.filter(column => '_nav' !== column.key)\n    : columns\n\n  return (\n    <>\n      <nav style={{ marginBottom: 15 }}>\n        <Button type=\"primary\" onClick={onUpdate} disabled={isLoading}>\n          Обновить\n        </Button>\n      </nav>\n      <Table\n        dataSource={data}\n        columns={nextColumns}\n        size=\"small\"\n        scroll={{ x: 2700 }}\n        rowKey=\"id\"\n        loading={isLoading}\n      />\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport { Button, Row, Col } from 'antd'\nimport {\n  AntInput,\n  AntDatePicker,\n  AntInputNumber,\n} from '../../../../components/form/create-antd-field'\n\nexport default function RealtyForm(props) {\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const { onSubmit } = props\n\n  return (\n    <Formik\n      onSubmit={async (values, form) => {\n        setIsSubmitting(true)\n\n        await onSubmit(values)\n\n        form.resetForm()\n        setIsSubmitting(false)\n      }}\n      initialValues={{\n        address: '',\n        buildFinishDate: null,\n        buildStartDate: null,\n        commercialArea: null,\n        districtId: null,\n        elevator: null,\n        facade: '',\n        fee: null,\n        floors: null,\n        id: null,\n        installment: '',\n        metro: '',\n        mortgage: null,\n        parkingInfo: '',\n        parkingPriceFrom: null,\n        parkingPriceTo: null,\n        presentationLink: '',\n        priceLink: '',\n        realtyInfo: '',\n        special: '',\n        windows: '',\n      }}\n    >\n      {() => (\n        <Form className=\"form\">\n          <Row type=\"flex\" gutter={20}>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"address\"\n                label=\"Адрес объекта недвижимости\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                name=\"buildStartDate\"\n                label=\"Начало строительства\"\n                component={AntDatePicker}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                name=\"buildFinishDate\"\n                label=\"Окончание строительства\"\n                component={AntDatePicker}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                name=\"commercialArea\"\n                label=\"Комерческая площадь\"\n                component={AntInputNumber}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"districtId\"\n                label=\"Идентификатор района\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field name=\"elevator\" label=\"Лифты\" component={AntInputNumber} />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"facade\"\n                label=\"Фасад\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                name=\"fee\"\n                label=\"Вознаграждение\"\n                component={AntInputNumber}\n              />\n            </Col>\n            <Col span={8}>\n              <Field name=\"floors\" label=\"Этаж\" component={AntInputNumber} />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"id\"\n                label=\"Идентификатор записи БД\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"installment\"\n                label=\"Рассрочка\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"metro\"\n                label=\"Станция метро\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"mortgage\"\n                label=\"Ипотека\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"parkingInfo\"\n                label=\"Информация о парковке\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                name=\"parkingPriceFrom\"\n                label=\"Цена парковки от\"\n                component={AntInputNumber}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                name=\"parkingPriceTo\"\n                label=\"Цена парковки до\"\n                component={AntInputNumber}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"presentationLink\"\n                label=\"Ссылка на презентацию\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"priceLink\"\n                label=\"Ссылка на прайс\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"realtyInfo\"\n                label=\"Информация о недвижимости\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"special\"\n                label=\"Акции\"\n                component={AntInput}\n              />\n            </Col>\n            <Col span={8}>\n              <Field\n                type=\"text\"\n                name=\"windows\"\n                label=\"Окна\"\n                component={AntInput}\n              />\n            </Col>\n          </Row>\n          <Row type=\"flex\" justify=\"center\" gutter={20}>\n            <Col span={8}>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                style={{ width: '100%', marginTop: 20 }}\n                disabled={isSubmitting}\n              >\n                Добавить\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      )}\n    </Formik>\n  )\n}\n","import React, { useEffect } from 'react'\nimport BuildingsTable from './components/buildings-table'\nimport BuildingsForm from './components/buildings-form'\nimport { observer, inject } from 'mobx-react'\nimport { Tabs, Alert } from 'antd'\n\nconst { TabPane } = Tabs\n\nfunction BuildingsPage(props) {\n  const { buildingsStore, currentUserStore } = props\n\n  useEffect(() => {\n    if (!buildingsStore.isFetched) {\n      buildingsStore.fetch()\n    }\n  }, [])\n\n  return (\n    <>\n      {buildingsStore.error && (\n        <Alert message={buildingsStore.error.message} type=\"error\" />\n      )}\n      {currentUserStore.isAdmin ? (\n        <Tabs type=\"card\">\n          <TabPane tab=\"дома/жк\" key=\"1\">\n            <BuildingsTable\n              data={buildingsStore.data}\n              isLoading={buildingsStore.isLoading}\n              onUpdate={buildingsStore.fetch.bind(buildingsStore)}\n            />\n          </TabPane>\n          <TabPane tab=\"добавить дом/жк\" key=\"2\">\n            <BuildingsForm\n              onSubmit={buildingsStore.addItem.bind(buildingsStore)}\n            />\n          </TabPane>\n        </Tabs>\n      ) : (\n        <BuildingsTable\n          isViewOnly\n          data={buildingsStore.data}\n          isLoading={buildingsStore.isLoading}\n          onUpdate={buildingsStore.fetch.bind(buildingsStore)}\n        />\n      )}\n    </>\n  )\n}\n\nexport default inject(\n  'buildingsStore',\n  'currentUserStore'\n)(observer(BuildingsPage))\n","import React, { useState } from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport { Button, Row, Col } from 'antd'\nimport { AntInput } from '../../../../components/form/create-antd-field'\n\nexport default function RealtyForm(props) {\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const { onSubmit } = props\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          info: '',\n          commonContacts: '',\n          viewContacts: '',\n          viewTime: '',\n        }}\n        onSubmit={async (values, form) => {\n          setIsSubmitting(true)\n\n          await onSubmit(values)\n\n          form.resetForm()\n          setIsSubmitting(false)\n        }}\n      >\n        {() => (\n          <Form className=\"form\">\n            <Row type=\"flex\" gutter={20}>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"name\"\n                  label=\"Название\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"info\"\n                  label=\"Информация о застройщике\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"commonContacts\"\n                  label=\"Контакты застройщика (общедоступный)\"\n                  component={AntInput}\n                />\n              </Col>\n              <Col span={8}>\n                <Field\n                  type=\"text\"\n                  name=\"viewContacts\"\n                  label=\"Контакты застройщика для просмотра\"\n                  component={AntInput}\n                />\n              </Col>\n            </Row>\n            <Row type=\"flex\" justify=\"center\">\n              <Col span={8}>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  style={{ width: '100%', marginTop: 20 }}\n                  disabled={isSubmitting}\n                >\n                  Добавить\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        )}\n      </Formik>\n    </>\n  )\n}\n","import React from 'react'\nimport { Table, Button } from 'antd'\nimport { developersStore } from '../../../../store'\n\nconst columns = [\n  {\n    title: 'id',\n    dataIndex: 'id',\n    key: 'id',\n  },\n  {\n    title: 'Контакты застройщика',\n    dataIndex: 'commonContacts',\n    key: 'commonContacts',\n  },\n  {\n    title: 'Информация о застройщике',\n    dataIndex: 'info',\n    key: 'info',\n  },\n  {\n    title: 'Название',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: 'Контакты застройщика для просмотра',\n    dataIndex: 'viewContacts',\n    key: 'viewContacts',\n  },\n  {\n    title: 'Время просмотра',\n    dataIndex: 'viewTime',\n    key: 'viewTime',\n  },\n  {\n    title: '',\n    dataIndex: null,\n    key: '_nav',\n    render: item => (\n      <Button\n        onClick={() => developersStore.removeItem(item.id)}\n        type=\"primary\"\n        icon=\"delete\"\n      />\n    ),\n  },\n]\n\nexport default function DeveloperTable(props) {\n  const { data, isLoading, onUpdate, isViewOnly } = props\n\n  const nextColumns = isViewOnly\n    ? columns.filter(column => '_nav' !== column.key)\n    : columns\n\n  return (\n    <>\n      <nav style={{ marginBottom: 15 }}>\n        <Button type=\"primary\" onClick={onUpdate} disabled={isLoading}>\n          Обновить\n        </Button>\n      </nav>\n      <Table\n        dataSource={data}\n        columns={nextColumns}\n        size=\"small\"\n        rowKey=\"id\"\n        loading={isLoading}\n      />\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport DeveloperForm from './components/developer-form'\nimport DeveloperTable from './components/developer-table'\nimport { observer, inject } from 'mobx-react'\nimport { Tabs, Alert } from 'antd'\n\nconst { TabPane } = Tabs\n\nfunction DevelopersPage(props) {\n  const { developersStore, currentUserStore } = props\n\n  useEffect(() => {\n    if (!developersStore.isFetched) {\n      developersStore.fetch()\n    }\n  }, [])\n\n  return (\n    <>\n      {developersStore.error && (\n        <Alert message={developersStore.error.message} type=\"error\" />\n      )}\n      {currentUserStore.isAdmin ? (\n        <Tabs type=\"card\">\n          <TabPane tab=\"объекты\" key=\"1\">\n            <DeveloperTable\n              data={developersStore.data}\n              isLoading={developersStore.isLoading}\n              onUpdate={developersStore.fetch.bind(developersStore)}\n            />\n          </TabPane>\n          <TabPane tab=\"добавить объект\" key=\"2\">\n            <DeveloperForm\n              error={developersStore.error}\n              onSubmit={developersStore.addItem.bind(developersStore)}\n            />\n          </TabPane>\n        </Tabs>\n      ) : (\n        <DeveloperTable\n          isViewOnly\n          data={developersStore.data}\n          isLoading={developersStore.isLoading}\n          onUpdate={developersStore.fetch.bind(developersStore)}\n        />\n      )}\n    </>\n  )\n}\n\nexport default inject(\n  'developersStore',\n  'currentUserStore'\n)(observer(DevelopersPage))\n","import React from 'react'\nimport { Table, Button, Select } from 'antd'\nimport { userStore, currentUserStore } from '../../../../store'\nimport { USER_ROLES } from '../../../../permission'\n\nconst { Option } = Select\n\nconst columns = [\n  {\n    title: 'id',\n    dataIndex: 'id',\n    key: 'id',\n  },\n  {\n    title: 'id роли',\n    dataIndex: 'roleId',\n    key: 'roleId',\n    render: (roleId, item) => {\n      if (!currentUserStore.isAdmin) {\n        return item.roleId\n      }\n\n      return (\n        <Select\n          defaultValue={roleId}\n          onChange={async roleId => {\n            await userStore.updateItem(item.id, { roleId })\n          }}\n        >\n          {Object.values(USER_ROLES).map(role => (\n            <Option value={role.id} key={role.id}>\n              {role.label}\n            </Option>\n          ))}\n        </Select>\n      )\n    },\n  },\n  {\n    title: 'компания',\n    dataIndex: 'company',\n    key: 'company',\n  },\n  {\n    title: 'телефон',\n    dataIndex: 'phoneNumber',\n    key: 'phoneNumber',\n  },\n  {\n    title: 'email',\n    dataIndex: 'email',\n    key: 'email',\n  },\n  {\n    title: 'город',\n    dataIndex: 'city',\n    key: 'city',\n  },\n]\n\nfunction UserTable(props) {\n  const { data, isLoading, onUpdate } = props\n\n  return (\n    <>\n      <nav style={{ marginBottom: 15 }}>\n        <Button type=\"primary\" onClick={onUpdate} disabled={isLoading}>\n          Обновить\n        </Button>\n      </nav>\n      <Table\n        dataSource={data}\n        columns={columns}\n        size=\"small\"\n        rowKey=\"id\"\n        loading={isLoading}\n      />\n    </>\n  )\n}\n\nexport default UserTable\n","import React, { useState, useEffect } from 'react'\nimport { Input, Button } from 'antd'\nimport { observer, inject } from 'mobx-react'\n\nimport './user-invite.css'\n\nfunction UserInviteForm(props) {\n    const { userStore } = props\n    const [email, setEmail] = useState('')\n    const [isSubmiting, setIsSubmiting] = useState(false)\n\n    const handleSubmit = async () => {\n        setIsSubmiting(true)\n        try {\n            await userStore.invite(email)\n        } catch (e) {\n        }\n        setIsSubmiting(false)\n        setEmail('')\n    }\n\n    return (\n        <div className=\"user-invite\">\n            <div className=\"user-invite-input\">\n                <Input type=\"email\" onChange={e => setEmail(e.target.value)} />\n            </div>\n            <Button type=\"primary\" onClick={handleSubmit} disabled={isSubmiting}>\n                пригласить пользователя\n            </Button>\n        </div>\n    )\n}\n\nexport default inject('userStore')(observer(UserInviteForm))","import React, { useEffect } from 'react'\nimport { Alert } from 'antd'\nimport UserTable from './components/user-table'\nimport UserInviteForm from './components/user-invite-form'\nimport { inject, observer } from 'mobx-react'\n\nfunction UsersPage(props) {\n  const { userStore } = props\n\n  useEffect(() => {\n    if (!userStore.isFetched) {\n      userStore.fetch()\n    }\n  }, [])\n\n  return (\n    <>\n      {userStore.error && (\n        <Alert type=\"error\" message={userStore.error.message} />\n      )}\n      <UserInviteForm />\n      <UserTable data={userStore.data} isLoading={userStore.isLoading} />\n    </>\n  )\n}\n\nexport default inject('userStore')(observer(UsersPage))\n","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { observer, inject } from 'mobx-react'\nimport SearchPage from '../pages/search'\nimport RealtyPage from '../pages/realty'\nimport BuildingsPage from '../pages/buildings'\nimport DevelopersPage from '../pages/developers'\nimport UsersPage from '../pages/users'\n\nfunction Routes(props) {\n  const { currentUserStore } = props\n\n  return (\n    <Switch>\n      <Route path=\"/realty\" exact component={RealtyPage} />\n      <Route path=\"/buildings\" component={BuildingsPage} />\n      <Route path=\"/developers\" component={DevelopersPage} />\n      {currentUserStore.isAdmin && (\n        <Route path=\"/users\" component={UsersPage} />\n      )}\n      <Route path=\"/search\" component={SearchPage} />\n      <Redirect to=\"/realty\" />\n    </Switch>\n  )\n}\n\nexport default inject('currentUserStore')(observer(Routes))\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Menu, Button } from 'antd'\nimport { observer, inject } from 'mobx-react'\nimport { useLocation } from 'react-router'\n\nimport './nav-bar.css'\n\nfunction NavBar(props) {\n  const { currentUserStore } = props\n  const { pathname } = useLocation()\n\n  return (\n    <div className=\"nav-bar\">\n      <Menu selectedKeys={[pathname]} mode=\"horizontal\" theme=\"dark\">\n        <Menu.Item key=\"/realty\">\n          <Link to=\"/realty\">Объекты</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/buildings\">\n          <Link to=\"/buildings\">Дома / ЖК</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/developers\">\n          <Link to=\"/developers\">Застройщик</Link>\n        </Menu.Item>\n        {currentUserStore.isAdmin && (\n          <Menu.Item key=\"/users\">\n            <Link to=\"/users\">Пользователи</Link>\n          </Menu.Item>\n        )}\n        <Menu.Item key=\"/search\">\n          <Link to=\"/search\">Поиск</Link>\n        </Menu.Item>\n      </Menu>\n      <div className=\"nav-logout\">\n        <div className=\"nav-user-name\">{currentUserStore.user.fullName}</div>\n        <Button\n          onClick={() => currentUserStore.logOut()}\n          title=\"выйти\"\n          size=\"small\"\n        >\n          выйти\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default inject('currentUserStore')(observer(NavBar))\n","import React from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Form, Icon, Input, Button, Checkbox, Row, Col, Alert } from 'antd'\n\nimport './login.css'\n\nfunction LoginForm(props) {\n  const { currentUserStore, form } = props\n  const { getFieldDecorator } = form\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    form.validateFields(async (err, values) => {\n      if (!err) {\n        await currentUserStore.signIn(values)\n        form.resetFields()\n      }\n    })\n  }\n\n  const message = 'Обязательное поле!'\n\n  return (\n    <>\n    {currentUserStore.error && <Alert type=\"error\" message={currentUserStore.error.message} />}\n    <Form onSubmit={handleSubmit} className=\"login-form\">\n      <Form.Item>\n        <div>E-mail:</div>\n        {getFieldDecorator('username', {\n          rules: [{ required: true, message }],\n        })(\n          <Input\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n          />\n        )}\n      </Form.Item>\n      <Form.Item>\n        <div>Пароль:</div>\n        {getFieldDecorator('password', {\n          rules: [{ required: true, message }],\n        })(\n          <Input\n            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            type=\"password\"\n          />\n        )}\n      </Form.Item>\n      <Form.Item>\n        <div className=\"login-form-forgot\">\n          <Row type=\"flex\" justify=\"end\">\n            <Col>\n              {/* {getFieldDecorator('remember', {\n                valuePropName: 'checked',\n                initialValue: true,\n              })(<Checkbox>Запомнить</Checkbox>)} */}\n              <Checkbox>Запомнить</Checkbox>\n            </Col>\n            <Col>\n              <a href=\"\">Восстановить пароль</a>\n            </Col>\n          </Row>\n          <div className=\"login-form-footer\">\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n              loading={currentUserStore.isLoading}\n              size=\"large\"\n            >\n              Войти\n            </Button>\n          </div>\n        </div>\n      </Form.Item>\n    </Form>\n    </>\n  )\n}\n\nconst WrappedLoginForm = Form.create({})(LoginForm)\n\nexport default inject('currentUserStore')(observer(WrappedLoginForm))\n","import React from 'react'\nimport { Form, Input, Button, Row, Alert } from 'antd'\nimport { inject, observer } from 'mobx-react'\n\nimport './create-user.css'\n\nfunction CreateUserForm(props) {\n  const { form, currentUserStore, onCreated } = props\n  const { getFieldDecorator } = form\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    form.validateFields(async (err, values) => {\n      if (!err) {\n        await currentUserStore.signUp(values, onCreated)\n        form.resetFields()\n      }\n    })\n  }\n\n  const message = 'Обязательное поле!'\n\n  return (\n    <>\n        {currentUserStore.error && <Alert type=\"error\" message={currentUserStore.error.message} />}\n    <div className=\"create-user\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Item>\n          <Form.Item>\n            <div>E-mail:</div>\n            {getFieldDecorator('email', {\n              rules: [{ required: true, message }],\n            })(<Input type=\"email\" />)}\n          </Form.Item>\n          <Form.Item>\n            <div>Пароль:</div>\n            {getFieldDecorator('password', {\n              rules: [{ required: true, message }],\n            })(<Input type=\"password\" />)}\n          </Form.Item>\n          <div>ФИО:</div>\n          {getFieldDecorator('fullName', {\n            rules: [{ required: true, message }],\n          })(<Input type=\"text\" />)}\n        </Form.Item>\n        <Form.Item>\n          <div>Контактный номер телефона:</div>\n          {getFieldDecorator('phoneNumber', {\n            rules: [{ required: true, message }],\n          })(<Input type=\"tel\" />)}\n        </Form.Item>\n        <Form.Item>\n          <div>Компания:</div>\n          {getFieldDecorator('company', {\n            rules: [{ required: true, message }],\n          })(<Input type=\"text\" />)}\n        </Form.Item>\n        <Form.Item>\n          <div>Город:</div>\n          {getFieldDecorator('city', { rules: [{ required: true, message }] })(\n            <Input type=\"text\" />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <div>Секретный код:</div>\n          {getFieldDecorator('secretCode', { rules: [{ required: true, message }] })(\n            <Input type=\"text\" />\n          )}\n        </Form.Item>\n        {/* <Form.Item\n        {getFieldDecorator('photo', { rules: [{ required: true, message }] })(\n          <Input placeholder=\"Фото\" type=\"file\" />\n        )}\n      </Form.Item> */}\n        <Row type=\"flex\" justify=\"center\">\n          <Button\n            className=\"create-user-button\"\n            htmlType=\"submit\"\n            type=\"primary\"\n            loading={currentUserStore.isLoading}\n            size=\"large\"\n          >\n            Отправить\n          </Button>\n        </Row>\n      </Form>\n    </div>\n    </>\n  )\n}\n\nconst WrappedCreateUserForm = Form.create({})(CreateUserForm)\n\nexport default inject('currentUserStore')(observer(WrappedCreateUserForm))\n","import React, { useState } from 'react'\nimport { Tabs } from 'antd'\nimport LoginForm from './components/login'\nimport CreateUserForm from './components/create-user'\n\nconst { TabPane } = Tabs\n\nexport default function SignInForm() {\n  const [activeTab, setActiveTab] = useState('login')\n\n  return (\n    <div className=\"login-form\">\n      <Tabs activeKey={activeTab} onChange={setActiveTab} type=\"card\">\n        <TabPane tab=\"Войти\" key=\"login\">\n          <LoginForm />\n        </TabPane>\n        <TabPane tab=\"Регистрация\" key=\"create-user\">\n          <CreateUserForm onCreated={() => setActiveTab('login')} />\n        </TabPane>\n      </Tabs>\n    </div>\n  )\n}\n","import React from 'react'\nimport Routes from '../routes'\nimport NavBar from '../components/navbar'\nimport { Redirect } from 'react-router-dom'\nimport SignIn from '../components/form/signin'\nimport { observer, inject } from 'mobx-react'\n\nimport './app.css'\nimport 'antd/dist/antd.min.css'\n\nfunction App(props) {\n  const { currentUserStore } = props\n\n  return (\n    <div className=\"container\">\n      {currentUserStore.isAuth ? (\n        <>\n          <NavBar />\n          <Routes />\n        </>\n      ) : (\n        <>\n          <Redirect to=\"/\" />\n          <SignIn />\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default inject('currentUserStore')(observer(App))\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\nimport { BrowserRouter as Router, HashRouter } from 'react-router-dom'\nimport { Provider } from 'mobx-react'\nimport * as store from './store'\n\nReactDOM.render(\n  <Provider {...store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}